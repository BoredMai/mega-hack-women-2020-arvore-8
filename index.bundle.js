/*! For license information please see index.bundle.js.LICENSE.txt */
!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=51)}([function(e,n,t){"use strict";e.exports=t(32)},function(e,n,t){var r=t(5),o=t(37);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var o=(i=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([o]).join("\n")}var i,l,u;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&o[u[0]]||(t&&(u[2]?u[2]="".concat(t," and ").concat(u[2]):u[2]=t),n.push(u))}},n}},function(e,n,t){"use strict";function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}t.d(n,"a",(function(){return r}))},function(e,n,t){"use strict";e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,n,t){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),i=[];function l(e){for(var n=-1,t=0;t<i.length;t++)if(i[t].identifier===e){n=t;break}return n}function u(e,n){for(var t={},r=[],o=0;o<e.length;o++){var a=e[o],u=n.base?a[0]+n.base:a[0],c=t[u]||0,s="".concat(u," ").concat(c);t[u]=c+1;var f=l(s),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:s,updater:g(d,n),references:1}),r.push(s)}return r}function c(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var s,f=(s=[],function(e,n){return s[e]=n,s.filter(Boolean).join("\n")});function d(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(n,o);else{var a=document.createTextNode(o),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(a,i[n]):e.appendChild(a)}}function p(e,n,t){var r=t.css,o=t.media,a=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(e,n){var t,r,o;if(n.singleton){var a=h++;t=m||(m=c(n)),r=d.bind(null,t,a,!1),o=d.bind(null,t,a,!0)}else t=c(n),r=p.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=o());var t=u(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=l(t[r]);i[o].references--}for(var a=u(e,n),c=0;c<t.length;c++){var s=l(t[c]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}t=a}}}},function(e,n,t){e.exports=t(38)()},function(e,n,t){var r=t(5),o=t(44);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},,function(e,n,t){"use strict";(function(e){var r=t(0),o=t.n(r),a=t(3),i=t(6),l=t.n(i),u=1073741823,c="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==e?e:{};function s(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}var f=o.a.createContext||function(e,n){var t,o,i,f="__create-react-context-"+((c[i="__global_unique_id__"]=(c[i]||0)+1)+"__"),d=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).emitter=s(n.props.value),n}Object(a.a)(t,e);var r=t.prototype;return r.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,o=e.value;((a=r)===(i=o)?0!==a||1/a==1/i:a!=a&&i!=i)?t=0:(t="function"==typeof n?n(r,o):u,0!==(t|=0)&&this.emitter.set(e.value,t))}var a,i},r.render=function(){return this.props.children},t}(r.Component);d.childContextTypes=((t={})[f]=l.a.object.isRequired,t);var p=function(n){function t(){var e;return(e=n.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(n,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}Object(a.a)(t,n);var r=t.prototype;return r.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?u:n},r.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?u:e},r.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},r.getValue=function(){return this.context[f]?this.context[f].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(r.Component);return p.contextTypes=((o={})[f]=l.a.object,o),{Provider:d,Consumer:p}};n.a=f}).call(this,t(40))},function(e,n,t){var r=t(41);e.exports=p,e.exports.parse=a,e.exports.compile=function(e,n){return l(a(e,n),n)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,n){for(var t,r=[],a=0,i=0,l="",s=n&&n.delimiter||"/";null!=(t=o.exec(e));){var f=t[0],d=t[1],p=t.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var m=e[i],h=t[2],g=t[3],v=t[4],y=t[5],b=t[6],A=t[7];l&&(r.push(l),l="");var E=null!=h&&null!=m&&m!==h,k="+"===b||"*"===b,w="?"===b||"*"===b,x=t[2]||s,C=v||y;r.push({name:g||a++,prefix:h||"",delimiter:x,optional:w,repeat:k,partial:E,asterisk:!!A,pattern:C?c(C):A?".*":"[^"+u(x)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",f(n)));return function(n,o){for(var a="",l=n||{},u=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');a+=s.prefix+f}}else a+=s}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,n){return e.keys=n,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,n,t){r(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,a=!1!==t.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";n.push(c),c.repeat&&(p+="(?:"+d+p+")*"),i+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(t.delimiter||"/"),h=i.slice(-m.length)===m;return o||(i=(h?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=a?"$":o&&h?"":"(?="+m+"|$)",s(new RegExp("^"+i,f(t)),n)}function p(e,n,t){return r(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,n)}(e,n):r(e)?function(e,n,t){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],n,t).source);return s(new RegExp("(?:"+r.join("|")+")",f(t)),n)}(e,n,t):function(e,n,t){return d(a(e,t),n,t)}(e,n,t)}},function(e,n,t){var r=t(5),o=t(43);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){var r=t(5),o=t(47);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,n){for(var t,l,u=i(e),c=1;c<arguments.length;c++){for(var s in t=Object(arguments[c]))o.call(t,s)&&(u[s]=t[s]);if(r){l=r(t);for(var f=0;f<l.length;f++)a.call(t,l[f])&&(u[l[f]]=t[l[f]])}}return u}},function(e,n,t){"use strict";e.exports=t(42)},function(e,n,t){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(33)},function(e,n,t){var r=t(5),o=t(36);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";n.a=t.p+"assets/backgrounds/castle__eb4689ec7beac0200a9423335f095ef0.png"},function(e,n,t){"use strict";n.a=t.p+"assets/backgrounds/grass__1ec17045779fd8a7bce392ae858ded41.png"},function(e,n,t){"use strict";n.a=t.p+"assets/backgrounds/library__c3d2dba86761c0f93ee5e1d6df118e00.png"},function(e,n,t){"use strict";n.a=t.p+"assets/backgrounds/mountain__b885df2ea8db103f65f2b84d270ff086.png"},function(e,n,t){"use strict";n.a=t.p+"assets/foregrounds/princess__85a2b0ef97b0743a81494a8bf8d6a19c.png"},function(e,n,t){"use strict";n.a=t.p+"assets/foregrounds/princess_bird__5d34998295b6519308ca3074de9fe05c.png"},function(e,n,t){"use strict";n.a=t.p+"assets/foregrounds/book__762e4441ed0dc5fe0c60d5987922fbb1.png"},function(e,n,t){"use strict";n.a=t.p+"assets/foregrounds/fairy__60cbf1e4f246508406b462d97956fdcd.png"},function(e,n,t){"use strict";n.a=t.p+"assets/backgrounds/throne_room__99fe8b50c332974ff409260b9e7ee076.png"},function(e,n,t){"use strict";var r=t(14),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(m){var o=p(t);o&&o!==m&&e(n,o,r)}var i=s(t);f&&(i=i.concat(f(t)));for(var l=u(n),h=u(t),g=0;g<i.length;++g){var v=i[g];if(!(a[v]||r&&r[v]||h&&h[v]||l&&l[v])){var y=d(t,v);try{c(n,v,y)}catch(e){}}}}return n}},function(e,n,t){var r=t(5),o=t(45);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){var r;!function(){"use strict";var t={}.hasOwnProperty;function o(){for(var e=[],n=0;n<arguments.length;n++){var r=arguments[n];if(r){var a=typeof r;if("string"===a||"number"===a)e.push(r);else if(Array.isArray(r)&&r.length){var i=o.apply(null,r);i&&e.push(i)}else if("object"===a)for(var l in r)t.call(r,l)&&r[l]&&e.push(l)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(n,[]))||(e.exports=r)}()},function(e,n,t){var r=t(5),o=t(46);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";n.a=t.p+"assets/backgrounds/scroll__1d9d6bc8f58a1710fdb5835776c0f238.png"},function(e,n,t){var r=t(5),o=t(48);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";var r=t(13),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function A(e,n,t){this.props=e,this.context=n,this.refs=b,this.updater=t||y}function E(){}function k(e,n,t){this.props=e,this.context=n,this.refs=b,this.updater=t||y}A.prototype.isReactComponent={},A.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,n,"setState")},A.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=A.prototype;var w=k.prototype=new E;w.constructor=k,r(w,A.prototype),w.isPureReactComponent=!0;var x={current:null},C=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function T(e,n,t){var r,o={},i=null,l=null;if(null!=n)for(r in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(i=""+n.key),n)C.call(n,r)&&!_.hasOwnProperty(r)&&(o[r]=n[r]);var u=arguments.length-2;if(1===u)o.children=t;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:x.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var B=/\/+/g,P=[];function N(e,n,t,r){if(P.length){var o=P.pop();return o.result=e,o.keyPrefix=n,o.func=t,o.context=r,o.count=0,o}return{result:e,keyPrefix:n,func:t,context:r,count:0}}function O(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function R(e,n,t){return null==e?0:function e(n,t,r,o){var l=typeof n;"undefined"!==l&&"boolean"!==l||(n=null);var u=!1;if(null===n)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(n.$$typeof){case a:case i:u=!0}}if(u)return r(o,n,""===t?"."+z(n,0):t),1;if(u=0,t=""===t?".":t+":",Array.isArray(n))for(var c=0;c<n.length;c++){var s=t+z(l=n[c],c);u+=e(l,s,r,o)}else if(s=null===n||"object"!=typeof n?null:"function"==typeof(s=g&&n[g]||n["@@iterator"])?s:null,"function"==typeof s)for(n=s.call(n),c=0;!(l=n.next()).done;)u+=e(l=l.value,s=t+z(l,c++),r,o);else if("object"===l)throw r=""+n,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(n).join(", ")+"}":r,""));return u}(e,"",n,t)}function z(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return n[e]}))}(e.key):n.toString(36)}function M(e,n){e.func.call(e.context,n,e.count++)}function D(e,n,t){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,n,e.count++),Array.isArray(e)?I(e,r,t,(function(e){return e})):null!=e&&(S(e)&&(e=function(e,n){return{$$typeof:a,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||n&&n.key===e.key?"":(""+e.key).replace(B,"$&/")+"/")+t)),r.push(e))}function I(e,n,t,r,o){var a="";null!=t&&(a=(""+t).replace(B,"$&/")+"/"),R(e,D,n=N(n,a,r,o)),O(n)}var F={current:null};function j(){var e=F.current;if(null===e)throw Error(v(321));return e}var L={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:x,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:function(e,n,t){if(null==e)return e;var r=[];return I(e,r,null,n,t),r},forEach:function(e,n,t){if(null==e)return e;R(e,M,n=N(null,null,n,t)),O(n)},count:function(e){return R(e,(function(){return null}),null)},toArray:function(e){var n=[];return I(e,n,null,(function(e){return e})),n},only:function(e){if(!S(e))throw Error(v(143));return e}},n.Component=A,n.Fragment=l,n.Profiler=c,n.PureComponent=k,n.StrictMode=u,n.Suspense=p,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,n.cloneElement=function(e,n,t){if(null==e)throw Error(v(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,u=x.current),void 0!==n.key&&(i=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in n)C.call(n,s)&&!_.hasOwnProperty(s)&&(o[s]=void 0===n[s]&&void 0!==c?c[s]:n[s])}var s=arguments.length-2;if(1===s)o.children=t;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:f,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=T,n.createFactory=function(e){var n=T.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:d,render:e}},n.isValidElement=S,n.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},n.memo=function(e,n){return{$$typeof:m,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return j().useCallback(e,n)},n.useContext=function(e,n){return j().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return j().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return j().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return j().useLayoutEffect(e,n)},n.useMemo=function(e,n){return j().useMemo(e,n)},n.useReducer=function(e,n,t){return j().useReducer(e,n,t)},n.useRef=function(e){return j().useRef(e)},n.useState=function(e){return j().useState(e)},n.version="16.13.1"},function(e,n,t){"use strict";var r=t(0),o=t(13),a=t(34);function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));function l(e,n,t,r,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,n,t,r,o,a,i,s,f){u=!1,c=null,l.apply(d,arguments)}var m=null,h=null,g=null;function v(e,n,t){var r=e.type||"unknown-event";e.currentTarget=g(t),function(e,n,t,r,o,a,l,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(i(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,n,void 0,e),e.currentTarget=null}var y=null,b={};function A(){if(y)for(var e in b){var n=b[e],t=y.indexOf(e);if(!(-1<t))throw Error(i(96,e));if(!k[t]){if(!n.extractEvents)throw Error(i(97,e));for(var r in k[t]=n,t=n.eventTypes){var o=void 0,a=t[r],l=n,u=r;if(w.hasOwnProperty(u))throw Error(i(99,u));w[u]=a;var c=a.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&E(c[o],l,u);o=!0}else a.registrationName?(E(a.registrationName,l,u),o=!0):o=!1;if(!o)throw Error(i(98,r,e))}}}}function E(e,n,t){if(x[e])throw Error(i(100,e));x[e]=n,C[e]=n.eventTypes[t].dependencies}var k=[],w={},x={},C={};function _(e){var n,t=!1;for(n in e)if(e.hasOwnProperty(n)){var r=e[n];if(!b.hasOwnProperty(n)||b[n]!==r){if(b[n])throw Error(i(102,n));b[n]=r,t=!0}}t&&A()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),S=null,B=null,P=null;function N(e){if(e=h(e)){if("function"!=typeof S)throw Error(i(280));var n=e.stateNode;n&&(n=m(n),S(e.stateNode,e.type,n))}}function O(e){B?P?P.push(e):P=[e]:B=e}function R(){if(B){var e=B,n=P;if(P=B=null,N(e),n)for(e=0;e<n.length;e++)N(n[e])}}function z(e,n){return e(n)}function M(e,n,t,r,o){return e(n,t,r,o)}function D(){}var I=z,F=!1,j=!1;function L(){null===B&&null===P||(D(),R())}function U(e,n,t){if(j)return e(n,t);j=!0;try{return I(e,n,t)}finally{j=!1,L()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,$=Object.prototype.hasOwnProperty,V={},Q={};function H(e,n,t,r,o,a){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a}var Y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Y[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];Y[n]=new H(n,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Y[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Y[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Y[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Y[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Y[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Y[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Y[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function K(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(q,K);Y[n]=new H(n,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(q,K);Y[n]=new H(n,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(q,K);Y[n]=new H(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Y[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),Y.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Y[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(e,n,t,r){var o=Y.hasOwnProperty(n)?Y[n]:null;(null!==o?0===o.type:!r&&(2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1])))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!$.call(Q,e)||!$.call(V,e)&&(W.test(e)?Q[e]=!0:(V[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,G="function"==typeof Symbol&&Symbol.for,ee=G?Symbol.for("react.element"):60103,ne=G?Symbol.for("react.portal"):60106,te=G?Symbol.for("react.fragment"):60107,re=G?Symbol.for("react.strict_mode"):60108,oe=G?Symbol.for("react.profiler"):60114,ae=G?Symbol.for("react.provider"):60109,ie=G?Symbol.for("react.context"):60110,le=G?Symbol.for("react.concurrent_mode"):60111,ue=G?Symbol.for("react.forward_ref"):60112,ce=G?Symbol.for("react.suspense"):60113,se=G?Symbol.for("react.suspense_list"):60120,fe=G?Symbol.for("react.memo"):60115,de=G?Symbol.for("react.lazy"):60116,pe=G?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case te:return"Fragment";case ne:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ie:return"Context.Consumer";case ae:return"Context.Provider";case ue:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case fe:return ge(e.type);case pe:return ge(e.render);case de:if(e=1===e._status?e._result:null)return ge(e)}return null}function ve(e){var n="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var t="";break e;default:var r=e._debugOwner,o=e._debugSource,a=ge(e.type);t=null,r&&(t=ge(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace(J,"")+":"+o.lineNumber+")":t&&(a=" (created by "+t+")"),t="\n    in "+(r||"Unknown")+a}n+=t,e=e.return}while(e);return n}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function Ae(e){e._valueTracker||(e._valueTracker=function(e){var n=be(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Ee(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function ke(e,n){var t=n.checked;return o({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function we(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=ye(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function xe(e,n){null!=(n=n.checked)&&Z(e,"checked",n,!1)}function Ce(e,n){xe(e,n);var t=ye(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?Te(e,n.type,t):n.hasOwnProperty("defaultValue")&&Te(e,n.type,ye(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function _e(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function Te(e,n,t){"number"===n&&e.ownerDocument.activeElement===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function Se(e,n){return e=o({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function Be(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+ye(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function Pe(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(i(91));return o({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ne(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:ye(t)}}function Oe(e,n){var t=ye(n.value),r=ye(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function Re(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var ze="http://www.w3.org/1999/xhtml",Me="http://www.w3.org/2000/svg";function De(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ie(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?De(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var Fe,je,Le=(je=function(e,n){if(e.namespaceURI!==Me||"innerHTML"in e)e.innerHTML=n;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return je(e,n)}))}:je);function Ue(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}function We(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var $e={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},Ve={},Qe={};function He(e){if(Ve[e])return Ve[e];if(!$e[e])return e;var n,t=$e[e];for(n in t)if(t.hasOwnProperty(n)&&n in Qe)return Ve[e]=t[n];return e}T&&(Qe=document.createElement("div").style,"AnimationEvent"in window||(delete $e.animationend.animation,delete $e.animationiteration.animation,delete $e.animationstart.animation),"TransitionEvent"in window||delete $e.transitionend.transition);var Ye=He("animationend"),qe=He("animationiteration"),Ke=He("animationstart"),Xe=He("transitionend"),Ze="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Je=new("function"==typeof WeakMap?WeakMap:Map);function Ge(e){var n=Je.get(e);return void 0===n&&(n=new Map,Je.set(e,n)),n}function en(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).effectTag)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function nn(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function tn(e){if(en(e)!==e)throw Error(i(188))}function rn(e){if(!(e=function(e){var n=e.alternate;if(!n){if(null===(n=en(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){t=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===t)return tn(o),e;if(a===r)return tn(o),n;a=a.sibling}throw Error(i(188))}if(t.return!==r.return)t=o,r=a;else{for(var l=!1,u=o.child;u;){if(u===t){l=!0,t=o,r=a;break}if(u===r){l=!0,r=o,t=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===t){l=!0,t=a,r=o;break}if(u===r){l=!0,r=a,t=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}(e)))return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function on(e,n){if(null==n)throw Error(i(30));return null==e?n:Array.isArray(e)?Array.isArray(n)?(e.push.apply(e,n),e):(e.push(n),e):Array.isArray(n)?[e].concat(n):[e,n]}function an(e,n,t){Array.isArray(e)?e.forEach(n,t):e&&n.call(t,e)}var ln=null;function un(e){if(e){var n=e._dispatchListeners,t=e._dispatchInstances;if(Array.isArray(n))for(var r=0;r<n.length&&!e.isPropagationStopped();r++)v(e,n[r],t[r]);else n&&v(e,n,t);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function cn(e){if(null!==e&&(ln=on(ln,e)),e=ln,ln=null,e){if(an(e,un),ln)throw Error(i(95));if(s)throw e=f,s=!1,f=null,e}}function sn(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function fn(e){if(!T)return!1;var n=(e="on"+e)in document;return n||((n=document.createElement("div")).setAttribute(e,"return;"),n="function"==typeof n[e]),n}var dn=[];function pn(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>dn.length&&dn.push(e)}function mn(e,n,t,r){if(dn.length){var o=dn.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=n,o.targetInst=t,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:n,targetInst:t,ancestors:[]}}function hn(e){var n=e.targetInst,t=n;do{if(!t){e.ancestors.push(t);break}var r=t;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(n=t.tag)&&6!==n||e.ancestors.push(t),t=Pt(r)}while(t);for(t=0;t<e.ancestors.length;t++){n=e.ancestors[t];var o=sn(e.nativeEvent);r=e.topLevelType;var a=e.nativeEvent,i=e.eventSystemFlags;0===t&&(i|=64);for(var l=null,u=0;u<k.length;u++){var c=k[u];c&&(c=c.extractEvents(r,n,a,o,i))&&(l=on(l,c))}cn(l)}}function gn(e,n,t){if(!t.has(e)){switch(e){case"scroll":Xn(n,"scroll",!0);break;case"focus":case"blur":Xn(n,"focus",!0),Xn(n,"blur",!0),t.set("blur",null),t.set("focus",null);break;case"cancel":case"close":fn(e)&&Xn(n,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ze.indexOf(e)&&Kn(e,n)}t.set(e,null)}}var vn,yn,bn,An=!1,En=[],kn=null,wn=null,xn=null,Cn=new Map,_n=new Map,Tn=[],Sn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Bn="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pn(e,n,t,r,o){return{blockedOn:e,topLevelType:n,eventSystemFlags:32|t,nativeEvent:o,container:r}}function Nn(e,n){switch(e){case"focus":case"blur":kn=null;break;case"dragenter":case"dragleave":wn=null;break;case"mouseover":case"mouseout":xn=null;break;case"pointerover":case"pointerout":Cn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":_n.delete(n.pointerId)}}function On(e,n,t,r,o,a){return null===e||e.nativeEvent!==a?(e=Pn(n,t,r,o,a),null!==n&&(null!==(n=Nt(n))&&yn(n)),e):(e.eventSystemFlags|=r,e)}function Rn(e){var n=Pt(e.target);if(null!==n){var t=en(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=nn(t)))return e.blockedOn=n,void a.unstable_runWithPriority(e.priority,(function(){bn(t)}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function zn(e){if(null!==e.blockedOn)return!1;var n=et(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==n){var t=Nt(n);return null!==t&&yn(t),e.blockedOn=n,!1}return!0}function Mn(e,n,t){zn(e)&&t.delete(n)}function Dn(){for(An=!1;0<En.length;){var e=En[0];if(null!==e.blockedOn){null!==(e=Nt(e.blockedOn))&&vn(e);break}var n=et(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==n?e.blockedOn=n:En.shift()}null!==kn&&zn(kn)&&(kn=null),null!==wn&&zn(wn)&&(wn=null),null!==xn&&zn(xn)&&(xn=null),Cn.forEach(Mn),_n.forEach(Mn)}function In(e,n){e.blockedOn===n&&(e.blockedOn=null,An||(An=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Dn)))}function Fn(e){function n(n){return In(n,e)}if(0<En.length){In(En[0],e);for(var t=1;t<En.length;t++){var r=En[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==kn&&In(kn,e),null!==wn&&In(wn,e),null!==xn&&In(xn,e),Cn.forEach(n),_n.forEach(n),t=0;t<Tn.length;t++)(r=Tn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Tn.length&&null===(t=Tn[0]).blockedOn;)Rn(t),null===t.blockedOn&&Tn.shift()}var jn={},Ln=new Map,Un=new Map,Wn=["abort","abort",Ye,"animationEnd",qe,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Xe,"transitionEnd","waiting","waiting"];function $n(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],o=e[t+1],a="on"+(o[0].toUpperCase()+o.slice(1));a={phasedRegistrationNames:{bubbled:a,captured:a+"Capture"},dependencies:[r],eventPriority:n},Un.set(r,n),Ln.set(r,a),jn[o]=a}}$n("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$n("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$n(Wn,2);for(var Vn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Qn=0;Qn<Vn.length;Qn++)Un.set(Vn[Qn],0);var Hn=a.unstable_UserBlockingPriority,Yn=a.unstable_runWithPriority,qn=!0;function Kn(e,n){Xn(n,e,!1)}function Xn(e,n,t){var r=Un.get(n);switch(void 0===r?2:r){case 0:r=Zn.bind(null,n,1,e);break;case 1:r=Jn.bind(null,n,1,e);break;default:r=Gn.bind(null,n,1,e)}t?e.addEventListener(n,r,!0):e.addEventListener(n,r,!1)}function Zn(e,n,t,r){F||D();var o=Gn,a=F;F=!0;try{M(o,e,n,t,r)}finally{(F=a)||L()}}function Jn(e,n,t,r){Yn(Hn,Gn.bind(null,e,n,t,r))}function Gn(e,n,t,r){if(qn)if(0<En.length&&-1<Sn.indexOf(e))e=Pn(null,e,n,t,r),En.push(e);else{var o=et(e,n,t,r);if(null===o)Nn(e,r);else if(-1<Sn.indexOf(e))e=Pn(o,e,n,t,r),En.push(e);else if(!function(e,n,t,r,o){switch(n){case"focus":return kn=On(kn,e,n,t,r,o),!0;case"dragenter":return wn=On(wn,e,n,t,r,o),!0;case"mouseover":return xn=On(xn,e,n,t,r,o),!0;case"pointerover":var a=o.pointerId;return Cn.set(a,On(Cn.get(a)||null,e,n,t,r,o)),!0;case"gotpointercapture":return a=o.pointerId,_n.set(a,On(_n.get(a)||null,e,n,t,r,o)),!0}return!1}(o,e,n,t,r)){Nn(e,r),e=mn(e,r,null,n);try{U(hn,e)}finally{pn(e)}}}}function et(e,n,t,r){if(null!==(t=Pt(t=sn(r)))){var o=en(t);if(null===o)t=null;else{var a=o.tag;if(13===a){if(null!==(t=nn(o)))return t;t=null}else if(3===a){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;t=null}else o!==t&&(t=null)}}e=mn(e,r,t,n);try{U(hn,e)}finally{pn(e)}return null}var nt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tt=["Webkit","ms","Moz","O"];function rt(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||nt.hasOwnProperty(e)&&nt[e]?(""+n).trim():n+"px"}function ot(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=rt(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(nt).forEach((function(e){tt.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),nt[n]=nt[e]}))}));var at=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function it(e,n){if(n){if(at[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(i(137,e,""));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(i(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(i(62,""))}}function lt(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ut=ze;function ct(e,n){var t=Ge(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);n=C[n];for(var r=0;r<n.length;r++)gn(n[r],e,t)}function st(){}function ft(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function dt(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pt(e,n){var t,r=dt(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dt(r)}}function mt(){for(var e=window,n=ft();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=ft((e=n.contentWindow).document)}return n}function ht(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var gt="$?",vt="$!",yt=null,bt=null;function At(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function Et(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var kt="function"==typeof setTimeout?setTimeout:void 0,wt="function"==typeof clearTimeout?clearTimeout:void 0;function xt(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function Ct(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||t===vt||t===gt){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var _t=Math.random().toString(36).slice(2),Tt="__reactInternalInstance$"+_t,St="__reactEventHandlers$"+_t,Bt="__reactContainere$"+_t;function Pt(e){var n=e[Tt];if(n)return n;for(var t=e.parentNode;t;){if(n=t[Bt]||t[Tt]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=Ct(e);null!==e;){if(t=e[Tt])return t;e=Ct(e)}return n}t=(e=t).parentNode}return null}function Nt(e){return!(e=e[Tt]||e[Bt])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Ot(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function Rt(e){return e[St]||null}function zt(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Mt(e,n){var t=e.stateNode;if(!t)return null;var r=m(t);if(!r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(i(231,n,typeof t));return t}function Dt(e,n,t){(n=Mt(e,t.dispatchConfig.phasedRegistrationNames[n]))&&(t._dispatchListeners=on(t._dispatchListeners,n),t._dispatchInstances=on(t._dispatchInstances,e))}function It(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var n=e._targetInst,t=[];n;)t.push(n),n=zt(n);for(n=t.length;0<n--;)Dt(t[n],"captured",e);for(n=0;n<t.length;n++)Dt(t[n],"bubbled",e)}}function Ft(e,n,t){e&&t&&t.dispatchConfig.registrationName&&(n=Mt(e,t.dispatchConfig.registrationName))&&(t._dispatchListeners=on(t._dispatchListeners,n),t._dispatchInstances=on(t._dispatchInstances,e))}function jt(e){e&&e.dispatchConfig.registrationName&&Ft(e._targetInst,null,e)}function Lt(e){an(e,It)}var Ut=null,Wt=null,$t=null;function Vt(){if($t)return $t;var e,n,t=Wt,r=t.length,o="value"in Ut?Ut.value:Ut.textContent,a=o.length;for(e=0;e<r&&t[e]===o[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===o[a-n];n++);return $t=o.slice(e,1<n?1-n:void 0)}function Qt(){return!0}function Ht(){return!1}function Yt(e,n,t,r){for(var o in this.dispatchConfig=e,this._targetInst=n,this.nativeEvent=t,e=this.constructor.Interface)e.hasOwnProperty(o)&&((n=e[o])?this[o]=n(t):"target"===o?this.target=r:this[o]=t[o]);return this.isDefaultPrevented=(null!=t.defaultPrevented?t.defaultPrevented:!1===t.returnValue)?Qt:Ht,this.isPropagationStopped=Ht,this}function qt(e,n,t,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,n,t,r),o}return new this(e,n,t,r)}function Kt(e){if(!(e instanceof this))throw Error(i(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xt(e){e.eventPool=[],e.getPooled=qt,e.release=Kt}o(Yt.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Qt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Qt)},persist:function(){this.isPersistent=Qt},isPersistent:Ht,destructor:function(){var e,n=this.constructor.Interface;for(e in n)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Ht,this._dispatchInstances=this._dispatchListeners=null}}),Yt.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Yt.extend=function(e){function n(){}function t(){return r.apply(this,arguments)}var r=this;n.prototype=r.prototype;var a=new n;return o(a,t.prototype),t.prototype=a,t.prototype.constructor=t,t.Interface=o({},r.Interface,e),t.extend=r.extend,Xt(t),t},Xt(Yt);var Zt=Yt.extend({data:null}),Jt=Yt.extend({data:null}),Gt=[9,13,27,32],er=T&&"CompositionEvent"in window,nr=null;T&&"documentMode"in document&&(nr=document.documentMode);var tr=T&&"TextEvent"in window&&!nr,rr=T&&(!er||nr&&8<nr&&11>=nr),or=String.fromCharCode(32),ar={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ir=!1;function lr(e,n){switch(e){case"keyup":return-1!==Gt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ur(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var cr=!1;var sr={eventTypes:ar,extractEvents:function(e,n,t,r){var o;if(er)e:{switch(e){case"compositionstart":var a=ar.compositionStart;break e;case"compositionend":a=ar.compositionEnd;break e;case"compositionupdate":a=ar.compositionUpdate;break e}a=void 0}else cr?lr(e,t)&&(a=ar.compositionEnd):"keydown"===e&&229===t.keyCode&&(a=ar.compositionStart);return a?(rr&&"ko"!==t.locale&&(cr||a!==ar.compositionStart?a===ar.compositionEnd&&cr&&(o=Vt()):(Wt="value"in(Ut=r)?Ut.value:Ut.textContent,cr=!0)),a=Zt.getPooled(a,n,t,r),o?a.data=o:null!==(o=ur(t))&&(a.data=o),Lt(a),o=a):o=null,(e=tr?function(e,n){switch(e){case"compositionend":return ur(n);case"keypress":return 32!==n.which?null:(ir=!0,or);case"textInput":return(e=n.data)===or&&ir?null:e;default:return null}}(e,t):function(e,n){if(cr)return"compositionend"===e||!er&&lr(e,n)?(e=Vt(),$t=Wt=Ut=null,cr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return rr&&"ko"!==n.locale?null:n.data;default:return null}}(e,t))?((n=Jt.getPooled(ar.beforeInput,n,t,r)).data=e,Lt(n)):n=null,null===o?n:null===n?o:[o,n]}},fr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function dr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!fr[e.type]:"textarea"===n}var pr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function mr(e,n,t){return(e=Yt.getPooled(pr.change,e,n,t)).type="change",O(t),Lt(e),e}var hr=null,gr=null;function vr(e){cn(e)}function yr(e){if(Ee(Ot(e)))return e}function br(e,n){if("change"===e)return n}var Ar=!1;function Er(){hr&&(hr.detachEvent("onpropertychange",kr),gr=hr=null)}function kr(e){if("value"===e.propertyName&&yr(gr))if(e=mr(gr,e,sn(e)),F)cn(e);else{F=!0;try{z(vr,e)}finally{F=!1,L()}}}function wr(e,n,t){"focus"===e?(Er(),gr=t,(hr=n).attachEvent("onpropertychange",kr)):"blur"===e&&Er()}function xr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return yr(gr)}function Cr(e,n){if("click"===e)return yr(n)}function _r(e,n){if("input"===e||"change"===e)return yr(n)}T&&(Ar=fn("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:pr,_isInputEventSupported:Ar,extractEvents:function(e,n,t,r){var o=n?Ot(n):window,a=o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type)var i=br;else if(dr(o))if(Ar)i=_r;else{i=xr;var l=wr}else(a=o.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Cr);if(i&&(i=i(e,n)))return mr(i,t,r);l&&l(e,o,n),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Te(o,"number",o.value)}},Sr=Yt.extend({view:null,detail:null}),Br={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Br[e])&&!!n[e]}function Nr(){return Pr}var Or=0,Rr=0,zr=!1,Mr=!1,Dr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Nr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var n=Or;return Or=e.screenX,zr?"mousemove"===e.type?e.screenX-n:0:(zr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var n=Rr;return Rr=e.screenY,Mr?"mousemove"===e.type?e.screenY-n:0:(Mr=!0,0)}}),Ir=Dr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},jr={eventTypes:Fr,extractEvents:function(e,n,t,r,o){var a="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(a&&0==(32&o)&&(t.relatedTarget||t.fromElement)||!i&&!a)return null;(a=r.window===r?r:(a=r.ownerDocument)?a.defaultView||a.parentWindow:window,i)?(i=n,null!==(n=(n=t.relatedTarget||t.toElement)?Pt(n):null)&&(n!==en(n)||5!==n.tag&&6!==n.tag)&&(n=null)):i=null;if(i===n)return null;if("mouseout"===e||"mouseover"===e)var l=Dr,u=Fr.mouseLeave,c=Fr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Ir,u=Fr.pointerLeave,c=Fr.pointerEnter,s="pointer");if(e=null==i?a:Ot(i),a=null==n?a:Ot(n),(u=l.getPooled(u,i,t,r)).type=s+"leave",u.target=e,u.relatedTarget=a,(t=l.getPooled(c,n,t,r)).type=s+"enter",t.target=a,t.relatedTarget=e,s=n,(r=i)&&s)e:{for(c=s,i=0,e=l=r;e;e=zt(e))i++;for(e=0,n=c;n;n=zt(n))e++;for(;0<i-e;)l=zt(l),i--;for(;0<e-i;)c=zt(c),e--;for(;i--;){if(l===c||l===c.alternate)break e;l=zt(l),c=zt(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(i=r.alternate)||i!==c);)l.push(r),r=zt(r);for(r=[];s&&s!==c&&(null===(i=s.alternate)||i!==c);)r.push(s),s=zt(s);for(s=0;s<l.length;s++)Ft(l[s],"bubbled",u);for(s=r.length;0<s--;)Ft(r[s],"captured",t);return 0==(64&o)?[u]:[u,t]}};var Lr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},Ur=Object.prototype.hasOwnProperty;function Wr(e,n){if(Lr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!Ur.call(n,t[r])||!Lr(e[t[r]],n[t[r]]))return!1;return!0}var $r=T&&"documentMode"in document&&11>=document.documentMode,Vr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Qr=null,Hr=null,Yr=null,qr=!1;function Kr(e,n){var t=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;return qr||null==Qr||Qr!==ft(t)?null:("selectionStart"in(t=Qr)&&ht(t)?t={start:t.selectionStart,end:t.selectionEnd}:t={anchorNode:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset},Yr&&Wr(Yr,t)?null:(Yr=t,(e=Yt.getPooled(Vr.select,Hr,e,n)).type="select",e.target=Qr,Lt(e),e))}var Xr={eventTypes:Vr,extractEvents:function(e,n,t,r,o,a){if(!(a=!(o=a||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Ge(o),a=C.onSelect;for(var i=0;i<a.length;i++)if(!o.has(a[i])){o=!1;break e}o=!0}a=!o}if(a)return null;switch(o=n?Ot(n):window,e){case"focus":(dr(o)||"true"===o.contentEditable)&&(Qr=o,Hr=n,Yr=null);break;case"blur":Yr=Hr=Qr=null;break;case"mousedown":qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return qr=!1,Kr(t,r);case"selectionchange":if($r)break;case"keydown":case"keyup":return Kr(t,r)}return null}},Zr=Yt.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=Yt.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Gr=Sr.extend({relatedTarget:null});function eo(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},to={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ro=Sr.extend({key:function(e){if(e.key){var n=no[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=eo(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?to[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Nr,charCode:function(e){return"keypress"===e.type?eo(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?eo(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),oo=Dr.extend({dataTransfer:null}),ao=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Nr}),io=Yt.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),lo=Dr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),uo={eventTypes:jn,extractEvents:function(e,n,t,r){var o=Ln.get(e);if(!o)return null;switch(e){case"keypress":if(0===eo(t))return null;case"keydown":case"keyup":e=ro;break;case"blur":case"focus":e=Gr;break;case"click":if(2===t.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Dr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=oo;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ao;break;case Ye:case qe:case Ke:e=Zr;break;case Xe:e=io;break;case"scroll":e=Sr;break;case"wheel":e=lo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Yt}return Lt(n=e.getPooled(o,n,t,r)),n}};if(y)throw Error(i(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),A(),m=Rt,h=Nt,g=Ot,_({SimpleEventPlugin:uo,EnterLeaveEventPlugin:jr,ChangeEventPlugin:Tr,SelectEventPlugin:Xr,BeforeInputEventPlugin:sr});var co=[],so=-1;function fo(e){0>so||(e.current=co[so],co[so]=null,so--)}function po(e,n){so++,co[so]=e.current,e.current=n}var mo={},ho={current:mo},go={current:!1},vo=mo;function yo(e,n){var t=e.type.contextTypes;if(!t)return mo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in t)a[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function bo(e){return null!=(e=e.childContextTypes)}function Ao(){fo(go),fo(ho)}function Eo(e,n,t){if(ho.current!==mo)throw Error(i(168));po(ho,n),po(go,t)}function ko(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,ge(n)||"Unknown",a));return o({},t,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||mo,vo=ho.current,po(ho,e),po(go,go.current),!0}function xo(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=ko(e,n,vo),r.__reactInternalMemoizedMergedChildContext=e,fo(go),fo(ho),po(ho,e)):fo(go),po(go,t)}var Co=a.unstable_runWithPriority,_o=a.unstable_scheduleCallback,To=a.unstable_cancelCallback,So=a.unstable_requestPaint,Bo=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,No=a.unstable_ImmediatePriority,Oo=a.unstable_UserBlockingPriority,Ro=a.unstable_NormalPriority,zo=a.unstable_LowPriority,Mo=a.unstable_IdlePriority,Do={},Io=a.unstable_shouldYield,Fo=void 0!==So?So:function(){},jo=null,Lo=null,Uo=!1,Wo=Bo(),$o=1e4>Wo?Bo:function(){return Bo()-Wo};function Vo(){switch(Po()){case No:return 99;case Oo:return 98;case Ro:return 97;case zo:return 96;case Mo:return 95;default:throw Error(i(332))}}function Qo(e){switch(e){case 99:return No;case 98:return Oo;case 97:return Ro;case 96:return zo;case 95:return Mo;default:throw Error(i(332))}}function Ho(e,n){return e=Qo(e),Co(e,n)}function Yo(e,n,t){return e=Qo(e),_o(e,n,t)}function qo(e){return null===jo?(jo=[e],Lo=_o(No,Xo)):jo.push(e),Do}function Ko(){if(null!==Lo){var e=Lo;Lo=null,To(e)}Xo()}function Xo(){if(!Uo&&null!==jo){Uo=!0;var e=0;try{var n=jo;Ho(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),jo=null}catch(n){throw null!==jo&&(jo=jo.slice(e+1)),_o(No,Ko),n}finally{Uo=!1}}}function Zo(e,n,t){return 1073741821-(1+((1073741821-e+n/10)/(t/=10)|0))*t}function Jo(e,n){if(e&&e.defaultProps)for(var t in n=o({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}var Go={current:null},ea=null,na=null,ta=null;function ra(){ta=na=ea=null}function oa(e){var n=Go.current;fo(Go),e.type._context._currentValue=n}function aa(e,n){for(;null!==e;){var t=e.alternate;if(e.childExpirationTime<n)e.childExpirationTime=n,null!==t&&t.childExpirationTime<n&&(t.childExpirationTime=n);else{if(!(null!==t&&t.childExpirationTime<n))break;t.childExpirationTime=n}e=e.return}}function ia(e,n){ea=e,ta=na=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=n&&(Ri=!0),e.firstContext=null)}function la(e,n){if(ta!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(ta=e,n=1073741823),n={context:e,observedBits:n,next:null},null===na){if(null===ea)throw Error(i(308));na=n,ea.dependencies={expirationTime:0,firstContext:n,responders:null}}else na=na.next=n;return e._currentValue}var ua=!1;function ca(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function sa(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function fa(e,n){return(e={expirationTime:e,suspenseConfig:n,tag:0,payload:null,callback:null,next:null}).next=e}function da(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function pa(e,n){var t=e.alternate;null!==t&&sa(t,e),null===(t=(e=e.updateQueue).baseQueue)?(e.baseQueue=n.next=n,n.next=n):(n.next=t.next,t.next=n)}function ma(e,n,t,r){var a=e.updateQueue;ua=!1;var i=a.baseQueue,l=a.shared.pending;if(null!==l){if(null!==i){var u=i.next;i.next=l.next,l.next=u}i=l,a.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==i){u=i.next;var c=a.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((l=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),su(l,m.suspenseConfig);e:{var g=e,v=m;switch(l=n,h=t,v.tag){case 1:if("function"==typeof(g=v.payload)){c=g.call(h,c,l);break e}c=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null==(l="function"==typeof(g=v.payload)?g.call(h,c,l):g))break e;c=o({},c,l);break e;case 2:ua=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=a.effects)?a.effects=[m]:l.push(m))}if(null===(m=m.next)||m===u){if(null===(l=a.shared.pending))break;m=i.next=l.next,l.next=u,a.baseQueue=i=l,a.shared.pending=null}}null===p?f=c:p.next=d,a.baseState=f,a.baseQueue=p,fu(s),e.expirationTime=s,e.memoizedState=c}}function ha(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=t,"function"!=typeof r)throw Error(i(191,r));r.call(o)}}}var ga=X.ReactCurrentBatchConfig,va=(new r.Component).refs;function ya(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:o({},n,t),e.memoizedState=t,0===e.expirationTime&&(e.updateQueue.baseState=t)}var ba={isMounted:function(e){return!!(e=e._reactInternalFiber)&&en(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternalFiber;var r=Zl(),o=ga.suspense;(o=fa(r=Jl(r,e,o),o)).payload=n,null!=t&&(o.callback=t),da(e,o),Gl(e,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternalFiber;var r=Zl(),o=ga.suspense;(o=fa(r=Jl(r,e,o),o)).tag=1,o.payload=n,null!=t&&(o.callback=t),da(e,o),Gl(e,r)},enqueueForceUpdate:function(e,n){e=e._reactInternalFiber;var t=Zl(),r=ga.suspense;(r=fa(t=Jl(t,e,r),r)).tag=2,null!=n&&(r.callback=n),da(e,r),Gl(e,t)}};function Aa(e,n,t,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!n.prototype||!n.prototype.isPureReactComponent||(!Wr(t,r)||!Wr(o,a))}function Ea(e,n,t){var r=!1,o=mo,a=n.contextType;return"object"==typeof a&&null!==a?a=la(a):(o=bo(n)?vo:ho.current,a=(r=null!=(r=n.contextTypes))?yo(e,o):mo),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=ba,e.stateNode=n,n._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),n}function ka(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&ba.enqueueReplaceState(n,n.state,null)}function wa(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=va,ca(e);var a=n.contextType;"object"==typeof a&&null!==a?o.context=la(a):(a=bo(n)?vo:ho.current,o.context=yo(e,a)),ma(e,t,o,r),o.state=e.memoizedState,"function"==typeof(a=n.getDerivedStateFromProps)&&(ya(e,n,a,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&ba.enqueueReplaceState(o,o.state,null),ma(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var xa=Array.isArray;function Ca(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var o=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===o?n.ref:((n=function(e){var n=r.refs;n===va&&(n=r.refs={}),null===e?delete n[o]:n[o]=e})._stringRef=o,n)}if("string"!=typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function _a(e,n){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n,""))}function Ta(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.effectTag=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Nu(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.effectTag=2,t):r:(n.effectTag=2,t):t}function l(n){return e&&null===n.alternate&&(n.effectTag=2),n}function u(e,n,t,r){return null===n||6!==n.tag?((n=zu(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){return null!==n&&n.elementType===t.type?((r=o(n,t.props)).ref=Ca(e,n,t),r.return=e,r):((r=Ou(t.type,t.key,t.props,null,e.mode,r)).ref=Ca(e,n,t),r.return=e,r)}function s(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Mu(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function f(e,n,t,r,a){return null===n||7!==n.tag?((n=Ru(t,e.mode,r,a)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=zu(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return(t=Ou(n.type,n.key,n.props,null,e.mode,t)).ref=Ca(e,null,n),t.return=e,t;case ne:return(n=Mu(n,e.mode,t)).return=e,n}if(xa(n)||he(n))return(n=Ru(n,e.mode,t,null)).return=e,n;_a(e,n)}return null}function p(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==o?null:u(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return t.key===o?t.type===te?f(e,n,t.props.children,r,o):c(e,n,t,r):null;case ne:return t.key===o?s(e,n,t,r):null}if(xa(t)||he(t))return null!==o?null:f(e,n,t,r,null);_a(e,t)}return null}function m(e,n,t,r,o){if("string"==typeof r||"number"==typeof r)return u(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?t:r.key)||null,r.type===te?f(n,e,r.props.children,o,r.key):c(n,e,r,o);case ne:return s(n,e=e.get(null===r.key?t:r.key)||null,r,o)}if(xa(r)||he(r))return f(n,e=e.get(t)||null,r,o,null);_a(n,r)}return null}function h(o,i,l,u){for(var c=null,s=null,f=i,h=i=0,g=null;null!==f&&h<l.length;h++){f.index>h?(g=f,f=null):g=f.sibling;var v=p(o,f,l[h],u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&n(o,f),i=a(v,i,h),null===s?c=v:s.sibling=v,s=v,f=g}if(h===l.length)return t(o,f),c;if(null===f){for(;h<l.length;h++)null!==(f=d(o,l[h],u))&&(i=a(f,i,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<l.length;h++)null!==(g=m(f,o,h,l[h],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?h:g.key),i=a(g,i,h),null===s?c=g:s.sibling=g,s=g);return e&&f.forEach((function(e){return n(o,e)})),c}function g(o,l,u,c){var s=he(u);if("function"!=typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,h=l,g=l=0,v=null,y=u.next();null!==h&&!y.done;g++,y=u.next()){h.index>g?(v=h,h=null):v=h.sibling;var b=p(o,h,y.value,c);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&n(o,h),l=a(b,l,g),null===f?s=b:f.sibling=b,f=b,h=v}if(y.done)return t(o,h),s;if(null===h){for(;!y.done;g++,y=u.next())null!==(y=d(o,y.value,c))&&(l=a(y,l,g),null===f?s=y:f.sibling=y,f=y);return s}for(h=r(o,h);!y.done;g++,y=u.next())null!==(y=m(h,o,g,y.value,c))&&(e&&null!==y.alternate&&h.delete(null===y.key?g:y.key),l=a(y,l,g),null===f?s=y:f.sibling=y,f=y);return e&&h.forEach((function(e){return n(o,e)})),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===te&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case ee:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===te){t(e,c.sibling),(r=o(c,a.props.children)).return=e,e=r;break e}break;default:if(c.elementType===a.type){t(e,c.sibling),(r=o(c,a.props)).ref=Ca(e,c,a),r.return=e,e=r;break e}}t(e,c);break}n(e,c),c=c.sibling}a.type===te?((r=Ru(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Ou(a.type,a.key,a.props,null,e.mode,u)).ref=Ca(e,r,a),u.return=e,e=u)}return l(e);case ne:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){t(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=Mu(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(t(e,r.sibling),(r=o(r,a)).return=e,e=r):(t(e,r),(r=zu(a,e.mode,u)).return=e,e=r),l(e);if(xa(a))return h(e,r,a,u);if(he(a))return g(e,r,a,u);if(s&&_a(e,a),void 0===a&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(i(152,e.displayName||e.name||"Component"))}return t(e,r)}}var Sa=Ta(!0),Ba=Ta(!1),Pa={},Na={current:Pa},Oa={current:Pa},Ra={current:Pa};function za(e){if(e===Pa)throw Error(i(174));return e}function Ma(e,n){switch(po(Ra,n),po(Oa,e),po(Na,Pa),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:Ie(null,"");break;default:n=Ie(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}fo(Na),po(Na,n)}function Da(){fo(Na),fo(Oa),fo(Ra)}function Ia(e){za(Ra.current);var n=za(Na.current),t=Ie(n,e.type);n!==t&&(po(Oa,e),po(Na,t))}function Fa(e){Oa.current===e&&(fo(Na),fo(Oa))}var ja={current:0};function La(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||t.data===gt||t.data===vt))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.effectTag))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}function Ua(e,n){return{responder:e,props:n}}var Wa=X.ReactCurrentDispatcher,$a=X.ReactCurrentBatchConfig,Va=0,Qa=null,Ha=null,Ya=null,qa=!1;function Ka(){throw Error(i(321))}function Xa(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!Lr(e[t],n[t]))return!1;return!0}function Za(e,n,t,r,o,a){if(Va=a,Qa=n,n.memoizedState=null,n.updateQueue=null,n.expirationTime=0,Wa.current=null===e||null===e.memoizedState?Ai:Ei,e=t(r,o),n.expirationTime===Va){a=0;do{if(n.expirationTime=0,!(25>a))throw Error(i(301));a+=1,Ya=Ha=null,n.updateQueue=null,Wa.current=ki,e=t(r,o)}while(n.expirationTime===Va)}if(Wa.current=bi,n=null!==Ha&&null!==Ha.next,Va=0,Ya=Ha=Qa=null,qa=!1,n)throw Error(i(300));return e}function Ja(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ya?Qa.memoizedState=Ya=e:Ya=Ya.next=e,Ya}function Ga(){if(null===Ha){var e=Qa.alternate;e=null!==e?e.memoizedState:null}else e=Ha.next;var n=null===Ya?Qa.memoizedState:Ya.next;if(null!==n)Ya=n,Ha=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ha=e).memoizedState,baseState:Ha.baseState,baseQueue:Ha.baseQueue,queue:Ha.queue,next:null},null===Ya?Qa.memoizedState=Ya=e:Ya=Ya.next=e}return Ya}function ei(e,n){return"function"==typeof n?n(e):n}function ni(e){var n=Ga(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=Ha,o=r.baseQueue,a=t.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}r.baseQueue=o=a,t.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=a=null,c=o;do{var s=c.expirationTime;if(s<Va){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,a=r):u=u.next=f,s>Qa.expirationTime&&(Qa.expirationTime=s,fu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),su(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?a=r:u.next=l,Lr(r,n.memoizedState)||(Ri=!0),n.memoizedState=r,n.baseState=a,n.baseQueue=u,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function ti(e){var n=Ga(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,a=n.memoizedState;if(null!==o){t.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);Lr(a,n.memoizedState)||(Ri=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function ri(e){var n=Ja();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:ei,lastRenderedState:e}).dispatch=yi.bind(null,Qa,e),[n.memoizedState,e]}function oi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Qa.updateQueue)?(n={lastEffect:null},Qa.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function ai(){return Ga().memoizedState}function ii(e,n,t,r){var o=Ja();Qa.effectTag|=e,o.memoizedState=oi(1|n,t,void 0,void 0===r?null:r)}function li(e,n,t,r){var o=Ga();r=void 0===r?null:r;var a=void 0;if(null!==Ha){var i=Ha.memoizedState;if(a=i.destroy,null!==r&&Xa(r,i.deps))return void oi(n,t,a,r)}Qa.effectTag|=e,o.memoizedState=oi(1|n,t,a,r)}function ui(e,n){return ii(516,4,e,n)}function ci(e,n){return li(516,4,e,n)}function si(e,n){return li(4,2,e,n)}function fi(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function di(e,n,t){return t=null!=t?t.concat([e]):null,li(4,2,fi.bind(null,n,e),t)}function pi(){}function mi(e,n){return Ja().memoizedState=[e,void 0===n?null:n],e}function hi(e,n){var t=Ga();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Xa(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function gi(e,n){var t=Ga();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Xa(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function vi(e,n,t){var r=Vo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=$a.suspense;$a.suspense=void 0===n?null:n;try{e(!1),t()}finally{$a.suspense=r}}))}function yi(e,n,t){var r=Zl(),o=ga.suspense;o={expirationTime:r=Jl(r,e,o),suspenseConfig:o,action:t,eagerReducer:null,eagerState:null,next:null};var a=n.pending;if(null===a?o.next=o:(o.next=a.next,a.next=o),n.pending=o,a=e.alternate,e===Qa||null!==a&&a===Qa)qa=!0,o.expirationTime=Va,Qa.expirationTime=Va;else{if(0===e.expirationTime&&(null===a||0===a.expirationTime)&&null!==(a=n.lastRenderedReducer))try{var i=n.lastRenderedState,l=a(i,t);if(o.eagerReducer=a,o.eagerState=l,Lr(l,i))return}catch(e){}Gl(e,r)}}var bi={readContext:la,useCallback:Ka,useContext:Ka,useEffect:Ka,useImperativeHandle:Ka,useLayoutEffect:Ka,useMemo:Ka,useReducer:Ka,useRef:Ka,useState:Ka,useDebugValue:Ka,useResponder:Ka,useDeferredValue:Ka,useTransition:Ka},Ai={readContext:la,useCallback:mi,useContext:la,useEffect:ui,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,ii(4,2,fi.bind(null,n,e),t)},useLayoutEffect:function(e,n){return ii(4,2,e,n)},useMemo:function(e,n){var t=Ja();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Ja();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=yi.bind(null,Qa,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ja().memoizedState=e},useState:ri,useDebugValue:pi,useResponder:Ua,useDeferredValue:function(e,n){var t=ri(e),r=t[0],o=t[1];return ui((function(){var t=$a.suspense;$a.suspense=void 0===n?null:n;try{o(e)}finally{$a.suspense=t}}),[e,n]),r},useTransition:function(e){var n=ri(!1),t=n[0];return n=n[1],[mi(vi.bind(null,n,e),[n,e]),t]}},Ei={readContext:la,useCallback:hi,useContext:la,useEffect:ci,useImperativeHandle:di,useLayoutEffect:si,useMemo:gi,useReducer:ni,useRef:ai,useState:function(){return ni(ei)},useDebugValue:pi,useResponder:Ua,useDeferredValue:function(e,n){var t=ni(ei),r=t[0],o=t[1];return ci((function(){var t=$a.suspense;$a.suspense=void 0===n?null:n;try{o(e)}finally{$a.suspense=t}}),[e,n]),r},useTransition:function(e){var n=ni(ei),t=n[0];return n=n[1],[hi(vi.bind(null,n,e),[n,e]),t]}},ki={readContext:la,useCallback:hi,useContext:la,useEffect:ci,useImperativeHandle:di,useLayoutEffect:si,useMemo:gi,useReducer:ti,useRef:ai,useState:function(){return ti(ei)},useDebugValue:pi,useResponder:Ua,useDeferredValue:function(e,n){var t=ti(ei),r=t[0],o=t[1];return ci((function(){var t=$a.suspense;$a.suspense=void 0===n?null:n;try{o(e)}finally{$a.suspense=t}}),[e,n]),r},useTransition:function(e){var n=ti(ei),t=n[0];return n=n[1],[hi(vi.bind(null,n,e),[n,e]),t]}},wi=null,xi=null,Ci=!1;function _i(e,n){var t=Bu(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function Ti(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);case 13:default:return!1}}function Si(e){if(Ci){var n=xi;if(n){var t=n;if(!Ti(e,n)){if(!(n=xt(t.nextSibling))||!Ti(e,n))return e.effectTag=-1025&e.effectTag|2,Ci=!1,void(wi=e);_i(wi,t)}wi=e,xi=xt(n.firstChild)}else e.effectTag=-1025&e.effectTag|2,Ci=!1,wi=e}}function Bi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wi=e}function Pi(e){if(e!==wi)return!1;if(!Ci)return Bi(e),Ci=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!Et(n,e.memoizedProps))for(n=xi;n;)_i(e,n),n=xt(n.nextSibling);if(Bi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){xi=xt(e.nextSibling);break e}n--}else"$"!==t&&t!==vt&&t!==gt||n++}e=e.nextSibling}xi=null}}else xi=wi?xt(e.stateNode.nextSibling):null;return!0}function Ni(){xi=wi=null,Ci=!1}var Oi=X.ReactCurrentOwner,Ri=!1;function zi(e,n,t,r){n.child=null===e?Ba(n,null,t,r):Sa(n,e.child,t,r)}function Mi(e,n,t,r,o){t=t.render;var a=n.ref;return ia(n,o),r=Za(e,n,t,r,a,o),null===e||Ri?(n.effectTag|=1,zi(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Zi(e,n,o))}function Di(e,n,t,r,o,a){if(null===e){var i=t.type;return"function"!=typeof i||Pu(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Ou(t.type,null,r,null,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,Ii(e,n,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(t=null!==(t=t.compare)?t:Wr)(o,r)&&e.ref===n.ref)?Zi(e,n,a):(n.effectTag|=1,(e=Nu(i,r)).ref=n.ref,e.return=n,n.child=e)}function Ii(e,n,t,r,o,a){return null!==e&&Wr(e.memoizedProps,r)&&e.ref===n.ref&&(Ri=!1,o<a)?(n.expirationTime=e.expirationTime,Zi(e,n,a)):ji(e,n,t,r,a)}function Fi(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.effectTag|=128)}function ji(e,n,t,r,o){var a=bo(t)?vo:ho.current;return a=yo(n,a),ia(n,o),t=Za(e,n,t,r,a,o),null===e||Ri?(n.effectTag|=1,zi(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Zi(e,n,o))}function Li(e,n,t,r,o){if(bo(t)){var a=!0;wo(n)}else a=!1;if(ia(n,o),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),Ea(n,t,r),wa(n,t,r,o),r=!0;else if(null===e){var i=n.stateNode,l=n.memoizedProps;i.props=l;var u=i.context,c=t.contextType;"object"==typeof c&&null!==c?c=la(c):c=yo(n,c=bo(t)?vo:ho.current);var s=t.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&ka(n,i,r,c),ua=!1;var d=n.memoizedState;i.state=d,ma(n,r,i,o),u=n.memoizedState,l!==r||d!==u||go.current||ua?("function"==typeof s&&(ya(n,t,s,r),u=n.memoizedState),(l=ua||Aa(n,t,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.effectTag|=4)):("function"==typeof i.componentDidMount&&(n.effectTag|=4),n.memoizedProps=r,n.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(n.effectTag|=4),r=!1)}else i=n.stateNode,sa(e,n),l=n.memoizedProps,i.props=n.type===n.elementType?l:Jo(n.type,l),u=i.context,"object"==typeof(c=t.contextType)&&null!==c?c=la(c):c=yo(n,c=bo(t)?vo:ho.current),(f="function"==typeof(s=t.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&ka(n,i,r,c),ua=!1,u=n.memoizedState,i.state=u,ma(n,r,i,o),d=n.memoizedState,l!==r||u!==d||go.current||ua?("function"==typeof s&&(ya(n,t,s,r),d=n.memoizedState),(s=ua||Aa(n,t,l,r,u,d,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof i.componentDidUpdate&&(n.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=256),n.memoizedProps=r,n.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=256),r=!1);return Ui(e,n,t,r,a,o)}function Ui(e,n,t,r,o,a){Fi(e,n);var i=0!=(64&n.effectTag);if(!r&&!i)return o&&xo(n,t,!1),Zi(e,n,a);r=n.stateNode,Oi.current=n;var l=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.effectTag|=1,null!==e&&i?(n.child=Sa(n,e.child,null,a),n.child=Sa(n,null,l,a)):zi(e,n,l,a),n.memoizedState=r.state,o&&xo(n,t,!0),n.child}function Wi(e){var n=e.stateNode;n.pendingContext?Eo(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Eo(0,n.context,!1),Ma(e,n.containerInfo)}var $i,Vi,Qi,Hi={dehydrated:null,retryTime:0};function Yi(e,n,t){var r,o=n.mode,a=n.pendingProps,i=ja.current,l=!1;if((r=0!=(64&n.effectTag))||(r=0!=(2&i)&&(null===e||null!==e.memoizedState)),r?(l=!0,n.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),po(ja,1&i),null===e){if(void 0!==a.fallback&&Si(n),l){if(l=a.fallback,(a=Ru(null,o,0,null)).return=n,0==(2&n.mode))for(e=null!==n.memoizedState?n.child.child:n.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(t=Ru(l,o,t,null)).return=n,a.sibling=t,n.memoizedState=Hi,n.child=a,t}return o=a.children,n.memoizedState=null,n.child=Ba(n,null,o,t)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(a=a.fallback,(t=Nu(e,e.pendingProps)).return=n,0==(2&n.mode)&&(l=null!==n.memoizedState?n.child.child:n.child)!==e.child)for(t.child=l;null!==l;)l.return=t,l=l.sibling;return(o=Nu(o,a)).return=n,t.sibling=o,t.childExpirationTime=0,n.memoizedState=Hi,n.child=t,o}return t=Sa(n,e.child,a.children,t),n.memoizedState=null,n.child=t}if(e=e.child,l){if(l=a.fallback,(a=Ru(null,o,0,null)).return=n,a.child=e,null!==e&&(e.return=a),0==(2&n.mode))for(e=null!==n.memoizedState?n.child.child:n.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(t=Ru(l,o,t,null)).return=n,a.sibling=t,t.effectTag|=2,a.childExpirationTime=0,n.memoizedState=Hi,n.child=a,t}return n.memoizedState=null,n.child=Sa(n,e,a.children,t)}function qi(e,n){e.expirationTime<n&&(e.expirationTime=n);var t=e.alternate;null!==t&&t.expirationTime<n&&(t.expirationTime=n),aa(e.return,n)}function Ki(e,n,t,r,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailExpiration:0,tailMode:o,lastEffect:a}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailExpiration=0,i.tailMode=o,i.lastEffect=a)}function Xi(e,n,t){var r=n.pendingProps,o=r.revealOrder,a=r.tail;if(zi(e,n,r.children,t),0!=(2&(r=ja.current)))r=1&r|2,n.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&qi(e,t);else if(19===e.tag)qi(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(po(ja,r),0==(2&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===La(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),Ki(n,!1,o,t,a,n.lastEffect);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===La(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}Ki(n,!0,t,null,a,n.lastEffect);break;case"together":Ki(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function Zi(e,n,t){null!==e&&(n.dependencies=e.dependencies);var r=n.expirationTime;if(0!==r&&fu(r),n.childExpirationTime<t)return null;if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=Nu(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Nu(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Ji(e,n){switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Gi(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return bo(n.type)&&Ao(),null;case 3:return Da(),fo(go),fo(ho),(t=n.stateNode).pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),null!==e&&null!==e.child||!Pi(n)||(n.effectTag|=4),null;case 5:Fa(n),t=za(Ra.current);var a=n.type;if(null!==e&&null!=n.stateNode)Vi(e,n,a,r,t),e.ref!==n.ref&&(n.effectTag|=128);else{if(!r){if(null===n.stateNode)throw Error(i(166));return null}if(e=za(Na.current),Pi(n)){r=n.stateNode,a=n.type;var l=n.memoizedProps;switch(r[Tt]=n,r[St]=l,a){case"iframe":case"object":case"embed":Kn("load",r);break;case"video":case"audio":for(e=0;e<Ze.length;e++)Kn(Ze[e],r);break;case"source":Kn("error",r);break;case"img":case"image":case"link":Kn("error",r),Kn("load",r);break;case"form":Kn("reset",r),Kn("submit",r);break;case"details":Kn("toggle",r);break;case"input":we(r,l),Kn("invalid",r),ct(t,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Kn("invalid",r),ct(t,"onChange");break;case"textarea":Ne(r,l),Kn("invalid",r),ct(t,"onChange")}for(var u in it(a,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):x.hasOwnProperty(u)&&null!=c&&ct(t,u)}switch(a){case"input":Ae(r),_e(r,l,!0);break;case"textarea":Ae(r),Re(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=st)}t=e,n.updateQueue=t,null!==t&&(n.effectTag|=4)}else{switch(u=9===t.nodeType?t:t.ownerDocument,e===ut&&(e=De(a)),e===ut?"script"===a?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(a,{is:r.is}):(e=u.createElement(a),"select"===a&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,a),e[Tt]=n,e[St]=r,$i(e,n),n.stateNode=e,u=lt(a,r),a){case"iframe":case"object":case"embed":Kn("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ze.length;c++)Kn(Ze[c],e);c=r;break;case"source":Kn("error",e),c=r;break;case"img":case"image":case"link":Kn("error",e),Kn("load",e),c=r;break;case"form":Kn("reset",e),Kn("submit",e),c=r;break;case"details":Kn("toggle",e),c=r;break;case"input":we(e,r),c=ke(e,r),Kn("invalid",e),ct(t,"onChange");break;case"option":c=Se(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Kn("invalid",e),ct(t,"onChange");break;case"textarea":Ne(e,r),c=Pe(e,r),Kn("invalid",e),ct(t,"onChange");break;default:c=r}it(a,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?ot(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&Le(e,f):"children"===l?"string"==typeof f?("textarea"!==a||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?null!=f&&ct(t,l):null!=f&&Z(e,l,f,u))}switch(a){case"input":Ae(e),_e(e,r,!1);break;case"textarea":Ae(e),Re(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(t=r.value)?Be(e,!!r.multiple,t,!1):null!=r.defaultValue&&Be(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=st)}At(a,r)&&(n.effectTag|=4)}null!==n.ref&&(n.effectTag|=128)}return null;case 6:if(e&&null!=n.stateNode)Qi(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(i(166));t=za(Ra.current),za(Na.current),Pi(n)?(t=n.stateNode,r=n.memoizedProps,t[Tt]=n,t.nodeValue!==r&&(n.effectTag|=4)):((t=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Tt]=n,n.stateNode=t)}return null;case 13:return fo(ja),r=n.memoizedState,0!=(64&n.effectTag)?(n.expirationTime=t,n):(t=null!==r,r=!1,null===e?void 0!==n.memoizedProps.fallback&&Pi(n):(r=null!==(a=e.memoizedState),t||null===a||null!==(a=e.child.sibling)&&(null!==(l=n.firstEffect)?(n.firstEffect=a,a.nextEffect=l):(n.firstEffect=n.lastEffect=a,a.nextEffect=null),a.effectTag=8)),t&&!r&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&ja.current)?Ol===Cl&&(Ol=_l):(Ol!==Cl&&Ol!==_l||(Ol=Tl),0!==Il&&null!==Bl&&(Fu(Bl,Nl),ju(Bl,Il)))),(t||r)&&(n.effectTag|=4),null);case 4:return Da(),null;case 10:return oa(n),null;case 17:return bo(n.type)&&Ao(),null;case 19:if(fo(ja),null===(r=n.memoizedState))return null;if(a=0!=(64&n.effectTag),null===(l=r.rendering)){if(a)Ji(r,!1);else if(Ol!==Cl||null!==e&&0!=(64&e.effectTag))for(l=n.child;null!==l;){if(null!==(e=La(l))){for(n.effectTag|=64,Ji(r,!1),null!==(a=e.updateQueue)&&(n.updateQueue=a,n.effectTag|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=n.child;null!==r;)l=t,(a=r).effectTag&=2,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null,null===(e=a.alternate)?(a.childExpirationTime=0,a.expirationTime=l,a.child=null,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null):(a.childExpirationTime=e.childExpirationTime,a.expirationTime=e.expirationTime,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,l=e.dependencies,a.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return po(ja,1&ja.current|2),n.child}l=l.sibling}}else{if(!a)if(null!==(e=La(l))){if(n.effectTag|=64,a=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.effectTag|=4),Ji(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*$o()-r.renderingStartTime>r.tailExpiration&&1<t&&(n.effectTag|=64,a=!0,Ji(r,!1),n.expirationTime=n.childExpirationTime=t-1);r.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=r.last)?t.sibling=l:n.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=$o()+500),t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=$o(),t.sibling=null,n=ja.current,po(ja,a?1&n|2:1&n),t):null}throw Error(i(156,n.tag))}function el(e){switch(e.tag){case 1:bo(e.type)&&Ao();var n=e.effectTag;return 4096&n?(e.effectTag=-4097&n|64,e):null;case 3:if(Da(),fo(go),fo(ho),0!=(64&(n=e.effectTag)))throw Error(i(285));return e.effectTag=-4097&n|64,e;case 5:return Fa(e),null;case 13:return fo(ja),4096&(n=e.effectTag)?(e.effectTag=-4097&n|64,e):null;case 19:return fo(ja),null;case 4:return Da(),null;case 10:return oa(e),null;default:return null}}function nl(e,n){return{value:e,source:n,stack:ve(n)}}$i=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Vi=function(e,n,t,r,a){var i=e.memoizedProps;if(i!==r){var l,u,c=n.stateNode;switch(za(Na.current),e=null,t){case"input":i=ke(c,i),r=ke(c,r),e=[];break;case"option":i=Se(c,i),r=Se(c,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Pe(c,i),r=Pe(c,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(c.onclick=st)}for(l in it(t,r),t=null,i)if(!r.hasOwnProperty(l)&&i.hasOwnProperty(l)&&null!=i[l])if("style"===l)for(u in c=i[l])c.hasOwnProperty(u)&&(t||(t={}),t[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=i?i[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(t||(t={}),t[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(t||(t={}),t[u]=s[u])}else t||(e||(e=[]),e.push(l,t)),t=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(x.hasOwnProperty(l)?(null!=s&&ct(a,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}t&&(e=e||[]).push("style",t),a=e,(n.updateQueue=a)&&(n.effectTag|=4)}},Qi=function(e,n,t,r){t!==r&&(n.effectTag|=4)};var tl="function"==typeof WeakSet?WeakSet:Set;function rl(e,n){var t=n.source,r=n.stack;null===r&&null!==t&&(r=ve(t)),null!==t&&ge(t.type),n=n.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(n)}catch(e){setTimeout((function(){throw e}))}}function ol(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){wu(e,n)}else n.current=null}function al(e,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&n.effectTag&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:Jo(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(i(163))}function il(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.destroy;t.destroy=void 0,void 0!==r&&r()}t=t.next}while(t!==n)}}function ll(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function ul(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:return void ll(3,t);case 1:if(e=t.stateNode,4&t.effectTag)if(null===n)e.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:Jo(t.type,n.memoizedProps);e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(n=t.updateQueue)&&ha(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:e=t.child.stateNode;break;case 1:e=t.child.stateNode}ha(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.effectTag&&At(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&Fn(t)))));case 19:case 17:case 20:case 21:return}throw Error(i(163))}function cl(e,n,t){switch("function"==typeof Tu&&Tu(n),n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ho(97<t?97:t,(function(){var e=r;do{var t=e.destroy;if(void 0!==t){var o=n;try{t()}catch(e){wu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ol(n),"function"==typeof(t=n.stateNode).componentWillUnmount&&function(e,n){try{n.props=e.memoizedProps,n.state=e.memoizedState,n.componentWillUnmount()}catch(n){wu(e,n)}}(n,t);break;case 5:ol(n);break;case 4:pl(e,n,t)}}function sl(e){var n=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==n&&sl(n)}function fl(e){return 5===e.tag||3===e.tag||4===e.tag}function dl(e){e:{for(var n=e.return;null!==n;){if(fl(n)){var t=n;break e}n=n.return}throw Error(i(160))}switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(i(161))}16&t.effectTag&&(Ue(n,""),t.effectTag&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||fl(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.effectTag)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.effectTag)){t=t.stateNode;break e}}r?function e(n,t,r){var o=n.tag,a=5===o||6===o;if(a)n=a?n.stateNode:n.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(n,t):r.insertBefore(n,t):(8===r.nodeType?(t=r.parentNode).insertBefore(n,r):(t=r).appendChild(n),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=st));else if(4!==o&&null!==(n=n.child))for(e(n,t,r),n=n.sibling;null!==n;)e(n,t,r),n=n.sibling}(e,t,n):function e(n,t,r){var o=n.tag,a=5===o||6===o;if(a)n=a?n.stateNode:n.stateNode.instance,t?r.insertBefore(n,t):r.appendChild(n);else if(4!==o&&null!==(n=n.child))for(e(n,t,r),n=n.sibling;null!==n;)e(n,t,r),n=n.sibling}(e,t,n)}function pl(e,n,t){for(var r,o,a=n,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(i(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var u=e,c=a,s=t,f=c;;)if(cl(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=a.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,o=!0,a.child.return=a,a=a.child;continue}}else if(cl(e,a,t),null!==a.child){a.child.return=a,a=a.child;continue}if(a===n)break;for(;null===a.sibling;){if(null===a.return||a.return===n)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function ml(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:return void il(3,n);case 1:return;case 5:var t=n.stateNode;if(null!=t){var r=n.memoizedProps,o=null!==e?e.memoizedProps:r;e=n.type;var a=n.updateQueue;if(n.updateQueue=null,null!==a){for(t[St]=r,"input"===e&&"radio"===r.type&&null!=r.name&&xe(t,r),lt(e,o),n=lt(e,r),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?ot(t,u):"dangerouslySetInnerHTML"===l?Le(t,u):"children"===l?Ue(t,u):Z(t,l,u,n)}switch(e){case"input":Ce(t,r);break;case"textarea":Oe(t,r);break;case"select":n=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Be(t,!!r.multiple,e,!1):n!==!!r.multiple&&(null!=r.defaultValue?Be(t,!!r.multiple,r.defaultValue,!0):Be(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(i(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((n=n.stateNode).hydrate&&(n.hydrate=!1,Fn(n.containerInfo)));case 12:return;case 13:if(t=n,null===n.memoizedState?r=!1:(r=!0,t=n.child,jl=$o()),null!==t)e:for(e=t;;){if(5===e.tag)a=e.stateNode,r?"function"==typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,a.style.display=rt("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(a=e.child.sibling).return=e,e=a;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void hl(n);case 19:return void hl(n);case 17:return}throw Error(i(163))}function hl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new tl),n.forEach((function(n){var r=Cu.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}var gl="function"==typeof WeakMap?WeakMap:Map;function vl(e,n,t){(t=fa(t,null)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Ul||(Ul=!0,Wl=r),rl(e,n)},t}function yl(e,n,t){(t=fa(t,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return rl(e,n),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===$l?$l=new Set([this]):$l.add(this),rl(e,n));var t=n.stack;this.componentDidCatch(n.value,{componentStack:null!==t?t:""})}),t}var bl,Al=Math.ceil,El=X.ReactCurrentDispatcher,kl=X.ReactCurrentOwner,wl=16,xl=32,Cl=0,_l=3,Tl=4,Sl=0,Bl=null,Pl=null,Nl=0,Ol=Cl,Rl=null,zl=1073741823,Ml=1073741823,Dl=null,Il=0,Fl=!1,jl=0,Ll=null,Ul=!1,Wl=null,$l=null,Vl=!1,Ql=null,Hl=90,Yl=null,ql=0,Kl=null,Xl=0;function Zl(){return 0!=(48&Sl)?1073741821-($o()/10|0):0!==Xl?Xl:Xl=1073741821-($o()/10|0)}function Jl(e,n,t){if(0==(2&(n=n.mode)))return 1073741823;var r=Vo();if(0==(4&n))return 99===r?1073741823:1073741822;if(0!=(Sl&wl))return Nl;if(null!==t)e=Zo(e,0|t.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(i(326))}return null!==Bl&&e===Nl&&--e,e}function Gl(e,n){if(50<ql)throw ql=0,Kl=null,Error(i(185));if(null!==(e=eu(e,n))){var t=Vo();1073741823===n?0!=(8&Sl)&&0==(48&Sl)?ou(e):(tu(e),0===Sl&&Ko()):tu(e),0==(4&Sl)||98!==t&&99!==t||(null===Yl?Yl=new Map([[e,n]]):(void 0===(t=Yl.get(e))||t>n)&&Yl.set(e,n))}}function eu(e,n){e.expirationTime<n&&(e.expirationTime=n);var t=e.alternate;null!==t&&t.expirationTime<n&&(t.expirationTime=n);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(t=r.alternate,r.childExpirationTime<n&&(r.childExpirationTime=n),null!==t&&t.childExpirationTime<n&&(t.childExpirationTime=n),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Bl===o&&(fu(n),Ol===Tl&&Fu(o,Nl)),ju(o,n)),o}function nu(e){var n=e.lastExpiredTime;if(0!==n)return n;if(!Iu(e,n=e.firstPendingTime))return n;var t=e.lastPingedTime;return 2>=(e=t>(e=e.nextKnownPendingLevel)?t:e)&&n!==e?0:e}function tu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=qo(ou.bind(null,e));else{var n=nu(e),t=e.callbackNode;if(0===n)null!==t&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Zl();if(1073741823===n?r=99:1===n||2===n?r=95:r=0>=(r=10*(1073741821-n)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==t){var o=e.callbackPriority;if(e.callbackExpirationTime===n&&o>=r)return;t!==Do&&To(t)}e.callbackExpirationTime=n,e.callbackPriority=r,n=1073741823===n?qo(ou.bind(null,e)):Yo(r,ru.bind(null,e),{timeout:10*(1073741821-n)-$o()}),e.callbackNode=n}}}function ru(e,n){if(Xl=0,n)return Lu(e,n=Zl()),tu(e),null;var t=nu(e);if(0!==t){if(n=e.callbackNode,0!=(48&Sl))throw Error(i(327));if(Au(),e===Bl&&t===Nl||lu(e,t),null!==Pl){var r=Sl;Sl|=wl;for(var o=cu();;)try{pu();break}catch(n){uu(e,n)}if(ra(),Sl=r,El.current=o,1===Ol)throw n=Rl,lu(e,t),Fu(e,t),tu(e),n;if(null===Pl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,r=Ol,Bl=null,r){case Cl:case 1:throw Error(i(345));case 2:Lu(e,2<t?2:t);break;case _l:if(Fu(e,t),t===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=gu(o)),1073741823===zl&&10<(o=jl+500-$o())){if(Fl){var a=e.lastPingedTime;if(0===a||a>=t){e.lastPingedTime=t,lu(e,t);break}}if(0!==(a=nu(e))&&a!==t)break;if(0!==r&&r!==t){e.lastPingedTime=r;break}e.timeoutHandle=kt(vu.bind(null,e),o);break}vu(e);break;case Tl:if(Fu(e,t),t===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=gu(o)),Fl&&(0===(o=e.lastPingedTime)||o>=t)){e.lastPingedTime=t,lu(e,t);break}if(0!==(o=nu(e))&&o!==t)break;if(0!==r&&r!==t){e.lastPingedTime=r;break}if(1073741823!==Ml?r=10*(1073741821-Ml)-$o():1073741823===zl?r=0:(r=10*(1073741821-zl)-5e3,0>(r=(o=$o())-r)&&(r=0),(t=10*(1073741821-t)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Al(r/1960))-r)&&(r=t)),10<r){e.timeoutHandle=kt(vu.bind(null,e),r);break}vu(e);break;case 5:if(1073741823!==zl&&null!==Dl){a=zl;var l=Dl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(a=$o()-(10*(1073741821-a)-(0|l.timeoutMs||5e3)))<=o?0:o+r-a),10<r){Fu(e,t),e.timeoutHandle=kt(vu.bind(null,e),r);break}}vu(e);break;default:throw Error(i(329))}if(tu(e),e.callbackNode===n)return ru.bind(null,e)}}return null}function ou(e){var n=e.lastExpiredTime;if(n=0!==n?n:1073741823,0!=(48&Sl))throw Error(i(327));if(Au(),e===Bl&&n===Nl||lu(e,n),null!==Pl){var t=Sl;Sl|=wl;for(var r=cu();;)try{du();break}catch(n){uu(e,n)}if(ra(),Sl=t,El.current=r,1===Ol)throw t=Rl,lu(e,n),Fu(e,n),tu(e),t;if(null!==Pl)throw Error(i(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,Bl=null,vu(e),tu(e)}return null}function au(e,n){var t=Sl;Sl|=1;try{return e(n)}finally{0===(Sl=t)&&Ko()}}function iu(e,n){var t=Sl;Sl&=-2,Sl|=8;try{return e(n)}finally{0===(Sl=t)&&Ko()}}function lu(e,n){e.finishedWork=null,e.finishedExpirationTime=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,wt(t)),null!==Pl)for(t=Pl.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ao();break;case 3:Da(),fo(go),fo(ho);break;case 5:Fa(r);break;case 4:Da();break;case 13:case 19:fo(ja);break;case 10:oa(r)}t=t.return}Bl=e,Pl=Nu(e.current,null),Nl=n,Ol=Cl,Rl=null,Ml=zl=1073741823,Dl=null,Il=0,Fl=!1}function uu(e,n){for(;;){try{if(ra(),Wa.current=bi,qa)for(var t=Qa.memoizedState;null!==t;){var r=t.queue;null!==r&&(r.pending=null),t=t.next}if(Va=0,Ya=Ha=Qa=null,qa=!1,null===Pl||null===Pl.return)return Ol=1,Rl=n,Pl=null;e:{var o=e,a=Pl.return,i=Pl,l=n;if(n=Nl,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&i.mode)){var c=i.alternate;c?(i.updateQueue=c.updateQueue,i.memoizedState=c.memoizedState,i.expirationTime=c.expirationTime):(i.updateQueue=null,i.memoizedState=null)}var s=0!=(1&ja.current),f=a;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var g=new Set;g.add(u),f.updateQueue=g}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var v=fa(1073741823,null);v.tag=2,da(i,v)}i.expirationTime=1073741823;break e}l=void 0,i=n;var y=o.pingCache;if(null===y?(y=o.pingCache=new gl,l=new Set,y.set(u,l)):void 0===(l=y.get(u))&&(l=new Set,y.set(u,l)),!l.has(i)){l.add(i);var b=xu.bind(null,o,u,i);u.then(b,b)}f.effectTag|=4096,f.expirationTime=n;break e}f=f.return}while(null!==f);l=Error((ge(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(i))}5!==Ol&&(Ol=2),l=nl(l,i),f=a;do{switch(f.tag){case 3:u=l,f.effectTag|=4096,f.expirationTime=n,pa(f,vl(f,u,n));break e;case 1:u=l;var A=f.type,E=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof A.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===$l||!$l.has(E)))){f.effectTag|=4096,f.expirationTime=n,pa(f,yl(f,u,n));break e}}f=f.return}while(null!==f)}Pl=hu(Pl)}catch(e){n=e;continue}break}}function cu(){var e=El.current;return El.current=bi,null===e?bi:e}function su(e,n){e<zl&&2<e&&(zl=e),null!==n&&e<Ml&&2<e&&(Ml=e,Dl=n)}function fu(e){e>Il&&(Il=e)}function du(){for(;null!==Pl;)Pl=mu(Pl)}function pu(){for(;null!==Pl&&!Io();)Pl=mu(Pl)}function mu(e){var n=bl(e.alternate,e,Nl);return e.memoizedProps=e.pendingProps,null===n&&(n=hu(e)),kl.current=null,n}function hu(e){Pl=e;do{var n=Pl.alternate;if(e=Pl.return,0==(2048&Pl.effectTag)){if(n=Gi(n,Pl,Nl),1===Nl||1!==Pl.childExpirationTime){for(var t=0,r=Pl.child;null!==r;){var o=r.expirationTime,a=r.childExpirationTime;o>t&&(t=o),a>t&&(t=a),r=r.sibling}Pl.childExpirationTime=t}if(null!==n)return n;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Pl.firstEffect),null!==Pl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Pl.firstEffect),e.lastEffect=Pl.lastEffect),1<Pl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Pl:e.firstEffect=Pl,e.lastEffect=Pl))}else{if(null!==(n=el(Pl)))return n.effectTag&=2047,n;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(n=Pl.sibling))return n;Pl=e}while(null!==Pl);return Ol===Cl&&(Ol=5),null}function gu(e){var n=e.expirationTime;return n>(e=e.childExpirationTime)?n:e}function vu(e){var n=Vo();return Ho(99,yu.bind(null,e,n)),null}function yu(e,n){do{Au()}while(null!==Ql);if(0!=(48&Sl))throw Error(i(327));var t=e.finishedWork,r=e.finishedExpirationTime;if(null===t)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,t===e.current)throw Error(i(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=gu(t);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Bl&&(Pl=Bl=null,Nl=0),1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,o=t.firstEffect):o=t:o=t.firstEffect,null!==o){var a=Sl;Sl|=xl,kl.current=null,yt=qn;var l=mt();if(ht(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,g=0,v=l,y=null;n:for(;;){for(var b;v!==u||0!==s&&3!==v.nodeType||(p=d+s),v!==f||0!==c&&3!==v.nodeType||(m=d+c),3===v.nodeType&&(d+=v.nodeValue.length),null!==(b=v.firstChild);)y=v,v=b;for(;;){if(v===l)break n;if(y===u&&++h===s&&(p=d),y===f&&++g===c&&(m=d),null!==(b=v.nextSibling))break;y=(v=y).parentNode}v=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;bt={activeElementDetached:null,focusedElem:l,selectionRange:u},qn=!1,Ll=o;do{try{bu()}catch(e){if(null===Ll)throw Error(i(330));wu(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);Ll=o;do{try{for(l=e,u=n;null!==Ll;){var A=Ll.effectTag;if(16&A&&Ue(Ll.stateNode,""),128&A){var E=Ll.alternate;if(null!==E){var k=E.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&A){case 2:dl(Ll),Ll.effectTag&=-3;break;case 6:dl(Ll),Ll.effectTag&=-3,ml(Ll.alternate,Ll);break;case 1024:Ll.effectTag&=-1025;break;case 1028:Ll.effectTag&=-1025,ml(Ll.alternate,Ll);break;case 4:ml(Ll.alternate,Ll);break;case 8:pl(l,s=Ll,u),sl(s)}Ll=Ll.nextEffect}}catch(e){if(null===Ll)throw Error(i(330));wu(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);if(k=bt,E=mt(),A=k.focusedElem,u=k.selectionRange,E!==A&&A&&A.ownerDocument&&function e(n,t){return!(!n||!t)&&(n===t||(!n||3!==n.nodeType)&&(t&&3===t.nodeType?e(n,t.parentNode):"contains"in n?n.contains(t):!!n.compareDocumentPosition&&!!(16&n.compareDocumentPosition(t))))}(A.ownerDocument.documentElement,A)){null!==u&&ht(A)&&(E=u.start,void 0===(k=u.end)&&(k=E),"selectionStart"in A?(A.selectionStart=E,A.selectionEnd=Math.min(k,A.value.length)):(k=(E=A.ownerDocument||document)&&E.defaultView||window).getSelection&&(k=k.getSelection(),s=A.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!k.extend&&l>u&&(s=u,u=l,l=s),s=pt(A,l),f=pt(A,u),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((E=E.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),l>u?(k.addRange(E),k.extend(f.node,f.offset)):(E.setEnd(f.node,f.offset),k.addRange(E))))),E=[];for(k=A;k=k.parentNode;)1===k.nodeType&&E.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof A.focus&&A.focus(),A=0;A<E.length;A++)(k=E[A]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qn=!!yt,bt=yt=null,e.current=t,Ll=o;do{try{for(A=e;null!==Ll;){var w=Ll.effectTag;if(36&w&&ul(A,Ll.alternate,Ll),128&w){E=void 0;var x=Ll.ref;if(null!==x){var C=Ll.stateNode;switch(Ll.tag){case 5:E=C;break;default:E=C}"function"==typeof x?x(E):x.current=E}}Ll=Ll.nextEffect}}catch(e){if(null===Ll)throw Error(i(330));wu(Ll,e),Ll=Ll.nextEffect}}while(null!==Ll);Ll=null,Fo(),Sl=a}else e.current=t;if(Vl)Vl=!1,Ql=e,Hl=n;else for(Ll=o;null!==Ll;)n=Ll.nextEffect,Ll.nextEffect=null,Ll=n;if(0===(n=e.firstPendingTime)&&($l=null),1073741823===n?e===Kl?ql++:(ql=0,Kl=e):ql=0,"function"==typeof _u&&_u(t.stateNode,r),tu(e),Ul)throw Ul=!1,e=Wl,Wl=null,e;return 0!=(8&Sl)||Ko(),null}function bu(){for(;null!==Ll;){var e=Ll.effectTag;0!=(256&e)&&al(Ll.alternate,Ll),0==(512&e)||Vl||(Vl=!0,Yo(97,(function(){return Au(),null}))),Ll=Ll.nextEffect}}function Au(){if(90!==Hl){var e=97<Hl?97:Hl;return Hl=90,Ho(e,Eu)}}function Eu(){if(null===Ql)return!1;var e=Ql;if(Ql=null,0!=(48&Sl))throw Error(i(331));var n=Sl;for(Sl|=xl,e=e.current.firstEffect;null!==e;){try{var t=e;if(0!=(512&t.effectTag))switch(t.tag){case 0:case 11:case 15:case 22:il(5,t),ll(5,t)}}catch(n){if(null===e)throw Error(i(330));wu(e,n)}t=e.nextEffect,e.nextEffect=null,e=t}return Sl=n,Ko(),!0}function ku(e,n,t){da(e,n=vl(e,n=nl(t,n),1073741823)),null!==(e=eu(e,1073741823))&&tu(e)}function wu(e,n){if(3===e.tag)ku(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){ku(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$l||!$l.has(r))){da(t,e=yl(t,e=nl(n,e),1073741823)),null!==(t=eu(t,1073741823))&&tu(t);break}}t=t.return}}function xu(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),Bl===e&&Nl===t?Ol===Tl||Ol===_l&&1073741823===zl&&$o()-jl<500?lu(e,Nl):Fl=!0:Iu(e,t)&&(0!==(n=e.lastPingedTime)&&n<t||(e.lastPingedTime=t,tu(e)))}function Cu(e,n){var t=e.stateNode;null!==t&&t.delete(n),0===(n=0)&&(n=Jl(n=Zl(),e,null)),null!==(e=eu(e,n))&&tu(e)}bl=function(e,n,t){var r=n.expirationTime;if(null!==e){var o=n.pendingProps;if(e.memoizedProps!==o||go.current)Ri=!0;else{if(r<t){switch(Ri=!1,n.tag){case 3:Wi(n),Ni();break;case 5:if(Ia(n),4&n.mode&&1!==t&&o.hidden)return n.expirationTime=n.childExpirationTime=1,null;break;case 1:bo(n.type)&&wo(n);break;case 4:Ma(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value,o=n.type._context,po(Go,o._currentValue),o._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!==(r=n.child.childExpirationTime)&&r>=t?Yi(e,n,t):(po(ja,1&ja.current),null!==(n=Zi(e,n,t))?n.sibling:null);po(ja,1&ja.current);break;case 19:if(r=n.childExpirationTime>=t,0!=(64&e.effectTag)){if(r)return Xi(e,n,t);n.effectTag|=64}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null),po(ja,ja.current),!r)return null}return Zi(e,n,t)}Ri=!1}}else Ri=!1;switch(n.expirationTime=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),e=n.pendingProps,o=yo(n,ho.current),ia(n,t),o=Za(null,n,r,e,o,t),n.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,bo(r)){var a=!0;wo(n)}else a=!1;n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ca(n);var l=r.getDerivedStateFromProps;"function"==typeof l&&ya(n,r,l,e),o.updater=ba,n.stateNode=o,o._reactInternalFiber=n,wa(n,r,e,t),n=Ui(null,n,r,!0,a,t)}else n.tag=0,zi(null,n,o,t),n=n.child;return n;case 16:e:{if(o=n.elementType,null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),e=n.pendingProps,function(e){if(-1===e._status){e._status=0;var n=e._ctor;n=n(),e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,n.type=o,a=n.tag=function(e){if("function"==typeof e)return Pu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),a){case 0:n=ji(null,n,o,e,t);break e;case 1:n=Li(null,n,o,e,t);break e;case 11:n=Mi(null,n,o,e,t);break e;case 14:n=Di(null,n,o,Jo(o.type,e),r,t);break e}throw Error(i(306,o,""))}return n;case 0:return r=n.type,o=n.pendingProps,ji(e,n,r,o=n.elementType===r?o:Jo(r,o),t);case 1:return r=n.type,o=n.pendingProps,Li(e,n,r,o=n.elementType===r?o:Jo(r,o),t);case 3:if(Wi(n),r=n.updateQueue,null===e||null===r)throw Error(i(282));if(r=n.pendingProps,o=null!==(o=n.memoizedState)?o.element:null,sa(e,n),ma(n,r,null,t),(r=n.memoizedState.element)===o)Ni(),n=Zi(e,n,t);else{if((o=n.stateNode.hydrate)&&(xi=xt(n.stateNode.containerInfo.firstChild),wi=n,o=Ci=!0),o)for(t=Ba(n,null,r,t),n.child=t;t;)t.effectTag=-3&t.effectTag|1024,t=t.sibling;else zi(e,n,r,t),Ni();n=n.child}return n;case 5:return Ia(n),null===e&&Si(n),r=n.type,o=n.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Et(r,o)?l=null:null!==a&&Et(r,a)&&(n.effectTag|=16),Fi(e,n),4&n.mode&&1!==t&&o.hidden?(n.expirationTime=n.childExpirationTime=1,n=null):(zi(e,n,l,t),n=n.child),n;case 6:return null===e&&Si(n),null;case 13:return Yi(e,n,t);case 4:return Ma(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Sa(n,null,r,t):zi(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Mi(e,n,r,o=n.elementType===r?o:Jo(r,o),t);case 7:return zi(e,n,n.pendingProps,t),n.child;case 8:case 12:return zi(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,o=n.pendingProps,l=n.memoizedProps,a=o.value;var u=n.type._context;if(po(Go,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0===(a=Lr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!go.current){n=Zi(e,n,t);break e}}else for(null!==(u=n.child)&&(u.return=n);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=fa(t,null)).tag=2,da(u,s)),u.expirationTime<t&&(u.expirationTime=t),null!==(s=u.alternate)&&s.expirationTime<t&&(s.expirationTime=t),aa(u.return,t),c.expirationTime<t&&(c.expirationTime=t);break}s=s.next}}else l=10===u.tag&&u.type===n.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===n){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}zi(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=(a=n.pendingProps).children,ia(n,t),r=r(o=la(o,a.unstable_observedBits)),n.effectTag|=1,zi(e,n,r,t),n.child;case 14:return a=Jo(o=n.type,n.pendingProps),Di(e,n,o,a=Jo(o.type,a),r,t);case 15:return Ii(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),n.tag=1,bo(r)?(e=!0,wo(n)):e=!1,ia(n,t),Ea(n,r,o),wa(n,r,o,t),Ui(null,n,r,!0,e,t);case 19:return Xi(e,n,t)}throw Error(i(156,n.tag))};var _u=null,Tu=null;function Su(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Bu(e,n,t,r){return new Su(e,n,t,r)}function Pu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Nu(e,n){var t=e.alternate;return null===t?((t=Bu(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.effectTag=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childExpirationTime=e.childExpirationTime,t.expirationTime=e.expirationTime,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Ou(e,n,t,r,o,a){var l=2;if(r=e,"function"==typeof e)Pu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case te:return Ru(t.children,o,a,n);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=Bu(12,t,n,8|o)).elementType=oe,e.type=oe,e.expirationTime=a,e;case ce:return(e=Bu(13,t,n,o)).type=ce,e.elementType=ce,e.expirationTime=a,e;case se:return(e=Bu(19,t,n,o)).elementType=se,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ae:l=10;break e;case ie:l=9;break e;case ue:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=Bu(l,t,n,o)).elementType=e,n.type=r,n.expirationTime=a,n}function Ru(e,n,t,r){return(e=Bu(7,e,r,n)).expirationTime=t,e}function zu(e,n,t){return(e=Bu(6,e,null,n)).expirationTime=t,e}function Mu(e,n,t){return(n=Bu(4,null!==e.children?e.children:[],e.key,n)).expirationTime=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Du(e,n,t){this.tag=n,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Iu(e,n){var t=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==t&&t>=n&&e<=n}function Fu(e,n){var t=e.firstSuspendedTime,r=e.lastSuspendedTime;t<n&&(e.firstSuspendedTime=n),(r>n||0===t)&&(e.lastSuspendedTime=n),n<=e.lastPingedTime&&(e.lastPingedTime=0),n<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function ju(e,n){n>e.firstPendingTime&&(e.firstPendingTime=n);var t=e.firstSuspendedTime;0!==t&&(n>=t?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:n>=e.lastSuspendedTime&&(e.lastSuspendedTime=n+1),n>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=n))}function Lu(e,n){var t=e.lastExpiredTime;(0===t||t>n)&&(e.lastExpiredTime=n)}function Uu(e,n,t,r){var o=n.current,a=Zl(),l=ga.suspense;a=Jl(a,o,l);e:if(t){n:{if(en(t=t._reactInternalFiber)!==t||1!==t.tag)throw Error(i(170));var u=t;do{switch(u.tag){case 3:u=u.stateNode.context;break n;case 1:if(bo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break n}}u=u.return}while(null!==u);throw Error(i(171))}if(1===t.tag){var c=t.type;if(bo(c)){t=ko(t,c,u);break e}}t=u}else t=mo;return null===n.context?n.context=t:n.pendingContext=t,(n=fa(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),da(o,n),Gl(o,a),a}function Wu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function $u(e,n){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<n&&(e.retryTime=n)}function Vu(e,n){$u(e,n),(e=e.alternate)&&$u(e,n)}function Qu(e,n,t){var r=new Du(e,n,t=null!=t&&!0===t.hydrate),o=Bu(3,null,null,2===n?7:1===n?3:0);r.current=o,o.stateNode=r,ca(o),e[Bt]=r.current,t&&0!==n&&function(e,n){var t=Ge(n);Sn.forEach((function(e){gn(e,n,t)})),Bn.forEach((function(e){gn(e,n,t)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Hu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Yu(e,n,t,r,o){var a=t._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Wu(i);l.call(e)}}Uu(n,i,e,o)}else{if(a=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new Qu(e,0,n?{hydrate:!0}:void 0)}(t,r),i=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Wu(i);u.call(e)}}iu((function(){Uu(n,i,e,o)}))}return Wu(i)}function qu(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ne,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Ku(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Hu(n))throw Error(i(200));return qu(e,n,null,t)}Qu.prototype.render=function(e){Uu(e,this._internalRoot,null,null)},Qu.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Uu(null,e,null,(function(){n[Bt]=null}))},vn=function(e){if(13===e.tag){var n=Zo(Zl(),150,100);Gl(e,n),Vu(e,n)}},yn=function(e){13===e.tag&&(Gl(e,3),Vu(e,3))},bn=function(e){if(13===e.tag){var n=Zl();Gl(e,n=Jl(n,e,null)),Vu(e,n)}},S=function(e,n,t){switch(n){case"input":if(Ce(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=Rt(r);if(!o)throw Error(i(90));Ee(r),Ce(r,o)}}}break;case"textarea":Oe(e,t);break;case"select":null!=(n=t.value)&&Be(e,!!t.multiple,n,!1)}},z=au,M=function(e,n,t,r,o){var a=Sl;Sl|=4;try{return Ho(98,e.bind(null,n,t,r,o))}finally{0===(Sl=a)&&Ko()}},D=function(){0==(49&Sl)&&(function(){if(null!==Yl){var e=Yl;Yl=null,e.forEach((function(e,n){Lu(n,e),tu(n)})),Ko()}}(),Au())},I=function(e,n){var t=Sl;Sl|=2;try{return e(n)}finally{0===(Sl=t)&&Ko()}};var Xu={Events:[Nt,Ot,Rt,_,w,Lt,function(e){an(e,jt)},O,R,Gn,cn,Au,{current:!1}]};!function(e){var n=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var n=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(n.isDisabled||!n.supportsFiber)return!0;try{var t=n.inject(e);_u=function(e){try{n.onCommitFiberRoot(t,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Tu=function(e){try{n.onCommitFiberUnmount(t,e)}catch(e){}}}catch(e){}})(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return n?n(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Pt,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}),n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Xu,n.createPortal=Ku,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternalFiber;if(void 0===n){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=rn(n))?null:e.stateNode},n.flushSync=function(e,n){if(0!=(48&Sl))throw Error(i(187));var t=Sl;Sl|=1;try{return Ho(99,e.bind(null,n))}finally{Sl=t,Ko()}},n.hydrate=function(e,n,t){if(!Hu(n))throw Error(i(200));return Yu(null,e,n,!0,t)},n.render=function(e,n,t){if(!Hu(n))throw Error(i(200));return Yu(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Hu(e))throw Error(i(40));return!!e._reactRootContainer&&(iu((function(){Yu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Bt]=null}))})),!0)},n.unstable_batchedUpdates=au,n.unstable_createPortal=function(e,n){return Ku(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Hu(t))throw Error(i(200));if(null==e||void 0===e._reactInternalFiber)throw Error(i(38));return Yu(e,n,t,!1,r)},n.version="16.13.1"},function(e,n,t){"use strict";e.exports=t(35)},function(e,n,t){"use strict";var r,o,a,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=n.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();n.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,n){c=setTimeout(e,n)},a=function(){clearTimeout(c)},i=function(){return!1},l=n.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)n.unstable_now=function(){return d.now()};else{var v=p.now();n.unstable_now=function(){return p.now()-v}}var y=!1,b=null,A=-1,E=5,k=0;i=function(){return n.unstable_now()>=k},l=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):E=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,x=w.port2;w.port1.onmessage=function(){if(null!==b){var e=n.unstable_now();k=e+E;try{b(!0,e)?x.postMessage(null):(y=!1,b=null)}catch(e){throw x.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,x.postMessage(null))},o=function(e,t){A=m((function(){e(n.unstable_now())}),t)},a=function(){h(A),A=-1}}function C(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,o=e[r];if(!(void 0!==o&&0<S(o,n)))break e;e[r]=n,e[t]=o,t=r}}function _(e){return void 0===(e=e[0])?null:e}function T(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>S(i,t))void 0!==u&&0>S(u,i)?(e[r]=u,e[l]=t,r=l):(e[r]=i,e[a]=t,r=a);else{if(!(void 0!==u&&0>S(u,t)))break e;e[r]=u,e[l]=t,r=l}}}return n}return null}function S(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var B=[],P=[],N=1,O=null,R=3,z=!1,M=!1,D=!1;function I(e){for(var n=_(P);null!==n;){if(null===n.callback)T(P);else{if(!(n.startTime<=e))break;T(P),n.sortIndex=n.expirationTime,C(B,n)}n=_(P)}}function F(e){if(D=!1,I(e),!M)if(null!==_(B))M=!0,r(j);else{var n=_(P);null!==n&&o(F,n.startTime-e)}}function j(e,t){M=!1,D&&(D=!1,a()),z=!0;var r=R;try{for(I(t),O=_(B);null!==O&&(!(O.expirationTime>t)||e&&!i());){var l=O.callback;if(null!==l){O.callback=null,R=O.priorityLevel;var u=l(O.expirationTime<=t);t=n.unstable_now(),"function"==typeof u?O.callback=u:O===_(B)&&T(B),I(t)}else T(B);O=_(B)}if(null!==O)var c=!0;else{var s=_(P);null!==s&&o(F,s.startTime-t),c=!1}return c}finally{O=null,R=r,z=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var U=l;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){M||z||(M=!0,r(j))},n.unstable_getCurrentPriorityLevel=function(){return R},n.unstable_getFirstCallbackNode=function(){return _(B)},n.unstable_next=function(e){switch(R){case 1:case 2:case 3:var n=3;break;default:n=R}var t=R;R=n;try{return e()}finally{R=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=U,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=R;R=e;try{return n()}finally{R=t}},n.unstable_scheduleCallback=function(e,t,i){var l=n.unstable_now();if("object"==typeof i&&null!==i){var u=i.delay;u="number"==typeof u&&0<u?l+u:l,i="number"==typeof i.timeout?i.timeout:L(e)}else i=L(e),u=l;return e={id:N++,callback:t,priorityLevel:e,startTime:u,expirationTime:i=u+i,sortIndex:-1},u>l?(e.sortIndex=u,C(P,e),null===_(B)&&e===_(P)&&(D?a():D=!0,o(F,u-l))):(e.sortIndex=i,C(B,e),M||z||(M=!0,r(j))),e},n.unstable_shouldYield=function(){var e=n.unstable_now();I(e);var t=_(B);return t!==O&&null!==O&&null!==t&&null!==t.callback&&t.startTime<=e&&t.expirationTime<O.expirationTime||i()},n.unstable_wrapCallback=function(e){var n=R;return function(){var t=R;R=n;try{return e.apply(this,arguments)}finally{R=t}}}},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".header__2TW5h {\n  background-color: #45cbcc;\n  color: #eeeeee;\n  display: flex;\n  font-size: 1.6rem;\n  font-weight: 600;\n  justify-content: space-between;\n  padding: 1rem;\n}\n","",{version:3,sources:["webpack://src/components/header/styles.module.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,cAAc;EACd,aAAa;EACb,iBAAiB;EACjB,gBAAgB;EAChB,8BAA8B;EAC9B,aAAa;AACf",sourcesContent:[":local(.header) {\n  background-color: #45cbcc;\n  color: #eeeeee;\n  display: flex;\n  font-size: 1.6rem;\n  font-weight: 600;\n  justify-content: space-between;\n  padding: 1rem;\n}\n"],sourceRoot:""}]),o.locals={header:"header__2TW5h"},n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r),a=t(4),i=t.n(a),l=t(17),u=t(18),c=t(19),s=t(20),f=t(21),d=t(22),p=t(23),m=t(24),h=t(25),g=o()(!0),v=i()(l.a),y=i()(u.a),b=i()(c.a),A=i()(s.a),E=i()(f.a),k=i()(d.a),w=i()(p.a),x=i()(m.a),C=i()(h.a);g.push([e.i,".castle__1jJej {\n  background: url("+v+");\n  background-color: #c3e4eb;\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.grass__1ZEDS {\n  background: url("+y+");\n  background-repeat: repeat-x;\n  background-position: bottom;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.library__3SqCR {\n  background: url("+b+");\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.mountain__sABEP {\n  background: url("+A+");\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.princess__27SL3 {\n  background: url("+E+");\n  background-repeat: no-repeat;\n  background-position: calc(50% - 40rem) 100%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n.princess-with-bird__JPbg- {\n  background: url("+k+");\n  background-repeat: no-repeat;\n  background-position: calc(50% - 40rem) 100%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n.princess-with-book__ajJYP {\n  background: url("+w+"),\n    url("+E+");\n  background-repeat: no-repeat;\n  background-position: calc(50% - 25rem) 69.5%, calc(50% - 40rem) 100%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n.princess-with-fairy__3xktt {\n  background: url("+E+"),\n    url("+x+");\n  background-repeat: no-repeat;\n  background-position: calc(50% - 40rem) 100%, calc(50% + 45rem) 50%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n.throne-room__1H3Dt {\n  background: url("+C+");\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n","",{version:3,sources:["webpack://src/styles/decorations.module.css"],names:[],mappings:"AAAA;EACE,mDAAqD;EACrD,yBAAyB;EACzB,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;AACxB;;AAEA;EACE,mDAAoD;EACpD,2BAA2B;EAC3B,2BAA2B;EAC3B,aAAa;EACb,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,mDAAsD;EACtD,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;AACxB;;AAEA;EACE,mDAAuD;EACvD,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;AACxB;;AAEA;EACE,mDAAuD;EACvD,4BAA4B;EAC5B,2CAA2C;EAC3C,aAAa;EACb,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,mDAA4D;EAC5D,4BAA4B;EAC5B,2CAA2C;EAC3C,aAAa;EACb,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE;2CAC6C;EAC7C,4BAA4B;EAC5B,oEAAoE;EACpE,aAAa;EACb,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE;2CAC0C;EAC1C,4BAA4B;EAC5B,kEAAkE;EAClE,aAAa;EACb,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,mDAA0D;EAC1D,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;AACxB",sourcesContent:[":local(.castle) {\n  background: url('/src/assets/backgrounds/castle.png');\n  background-color: #c3e4eb;\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n:local(.grass) {\n  background: url('/src/assets/backgrounds/grass.png');\n  background-repeat: repeat-x;\n  background-position: bottom;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n:local(.library) {\n  background: url('/src/assets/backgrounds/library.png');\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n:local(.mountain) {\n  background: url('/src/assets/backgrounds/mountain.png');\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n:local(.princess) {\n  background: url('/src/assets/foregrounds/princess.png');\n  background-repeat: no-repeat;\n  background-position: calc(50% - 40rem) 100%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n:local(.princess-with-bird) {\n  background: url('/src/assets/foregrounds/princess_bird.png');\n  background-repeat: no-repeat;\n  background-position: calc(50% - 40rem) 100%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n:local(.princess-with-book) {\n  background: url('/src/assets/foregrounds/book.png'),\n    url('/src/assets/foregrounds/princess.png');\n  background-repeat: no-repeat;\n  background-position: calc(50% - 25rem) 69.5%, calc(50% - 40rem) 100%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n:local(.princess-with-fairy) {\n  background: url('/src/assets/foregrounds/princess.png'),\n    url('/src/assets/foregrounds/fairy.png');\n  background-repeat: no-repeat;\n  background-position: calc(50% - 40rem) 100%, calc(50% + 45rem) 50%;\n  height: 100vh;\n  position: absolute;\n  width: 100vw;\n}\n\n:local(.throne-room) {\n  background: url('/src/assets/backgrounds/throne_room.png');\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n"],sourceRoot:""}]),g.locals={castle:"castle__1jJej",grass:"grass__1ZEDS",library:"library__3SqCR",mountain:"mountain__sABEP",princess:"princess__27SL3","princess-with-bird":"princess-with-bird__JPbg-",princessWithBird:"princess-with-bird__JPbg-","princess-with-book":"princess-with-book__ajJYP",princessWithBook:"princess-with-book__ajJYP","princess-with-fairy":"princess-with-fairy__3xktt",princessWithFairy:"princess-with-fairy__3xktt","throne-room":"throne-room__1H3Dt",throneRoom:"throne-room__1H3Dt"},n.default=g},function(e,n,t){"use strict";var r=t(39);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,n,t,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:a,resetWarningCache:o};return t.PropTypes=t,t}},function(e,n,t){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,n){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(e){"object"==typeof window&&(t=window)}e.exports=t},function(e,n){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,n,t){"use strict";var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,g=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,y=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,A=r?Symbol.for("react.responder"):60118,E=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case o:switch(e=e.type){case f:case d:case i:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case v:case g:case c:return e;default:return n}}case a:return n}}}function w(e){return k(e)===d}n.AsyncMode=f,n.ConcurrentMode=d,n.ContextConsumer=s,n.ContextProvider=c,n.Element=o,n.ForwardRef=p,n.Fragment=i,n.Lazy=v,n.Memo=g,n.Portal=a,n.Profiler=u,n.StrictMode=l,n.Suspense=m,n.isAsyncMode=function(e){return w(e)||k(e)===f},n.isConcurrentMode=w,n.isContextConsumer=function(e){return k(e)===s},n.isContextProvider=function(e){return k(e)===c},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},n.isForwardRef=function(e){return k(e)===p},n.isFragment=function(e){return k(e)===i},n.isLazy=function(e){return k(e)===v},n.isMemo=function(e){return k(e)===g},n.isPortal=function(e){return k(e)===a},n.isProfiler=function(e){return k(e)===u},n.isStrictMode=function(e){return k(e)===l},n.isSuspense=function(e){return k(e)===m},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===d||e===u||e===l||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===g||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===A||e.$$typeof===E||e.$$typeof===y)},n.typeOf=k},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".wrapper__3kTxv {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n}\n\n.loading-spinner___SVRY {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n\n.loading-spinner___SVRY div {\n  position: absolute;\n  top: 33px;\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  background: #9362ff;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n\n.loading-spinner___SVRY div:nth-child(1) {\n  left: 8px;\n  animation: loading-spinner1__1v7SG 0.6s infinite;\n}\n\n.loading-spinner___SVRY div:nth-child(2) {\n  left: 8px;\n  animation: loading-spinner2__1K5nB 0.6s infinite;\n}\n\n.loading-spinner___SVRY div:nth-child(3) {\n  left: 32px;\n  animation: loading-spinner2__1K5nB 0.6s infinite;\n}\n\n.loading-spinner___SVRY div:nth-child(4) {\n  left: 56px;\n  animation: loading-spinner3__5XwmG 0.6s infinite;\n}\n\n@keyframes loading-spinner1__1v7SG {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes loading-spinner3__5XwmG {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n\n@keyframes loading-spinner2__1K5nB {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n}\n","",{version:3,sources:["webpack://src/components/loading-spinner/styles.module.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,aAAa;EACb,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,mDAAmD;AACrD;;AAEA;EACE,SAAS;EACT,gDAAyC;AAC3C;;AAEA;EACE,SAAS;EACT,gDAAyC;AAC3C;;AAEA;EACE,UAAU;EACV,gDAAyC;AAC3C;;AAEA;EACE,UAAU;EACV,gDAAyC;AAC3C;;AAEA;EACE;IACE,mBAAmB;EACrB;EACA;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,mBAAmB;EACrB;EACA;IACE,mBAAmB;EACrB;AACF;;AAEA;EACE;IACE,0BAA0B;EAC5B;EACA;IACE,6BAA6B;EAC/B;AACF",sourcesContent:[":local(.wrapper) {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n}\n\n:local(.loading-spinner) {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n\n:local(.loading-spinner div) {\n  position: absolute;\n  top: 33px;\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  background: #9362ff;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n\n:local(.loading-spinner div:nth-child(1)) {\n  left: 8px;\n  animation: loading-spinner1 0.6s infinite;\n}\n\n:local(.loading-spinner div:nth-child(2)) {\n  left: 8px;\n  animation: loading-spinner2 0.6s infinite;\n}\n\n:local(.loading-spinner div:nth-child(3)) {\n  left: 32px;\n  animation: loading-spinner2 0.6s infinite;\n}\n\n:local(.loading-spinner div:nth-child(4)) {\n  left: 56px;\n  animation: loading-spinner3 0.6s infinite;\n}\n\n@keyframes loading-spinner1 {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes loading-spinner3 {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n\n@keyframes loading-spinner2 {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(24px, 0);\n  }\n}\n"],sourceRoot:""}]),o.locals={wrapper:"wrapper__3kTxv","loading-spinner":"loading-spinner___SVRY",loadingSpinner:"loading-spinner___SVRY","loading-spinner1":"loading-spinner1__1v7SG",loadingSpinner1:"loading-spinner1__1v7SG","loading-spinner2":"loading-spinner2__1K5nB",loadingSpinner2:"loading-spinner2__1K5nB","loading-spinner3":"loading-spinner3__5XwmG",loadingSpinner3:"loading-spinner3__5XwmG"},n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".item__3BfZ5 {\n  align-items: center;\n  border-radius: 3rem;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-size: 1.8rem;\n  padding: 1.5rem 2.5rem;\n}\n\n.item__3BfZ5:hover {\n  background-color: #9362ff44;\n}\n\n.item__3BfZ5 label {\n  margin-top: 1.5rem;\n}\n\n.item__3BfZ5 img {\n  opacity: 0.8;\n}\n\n.item-selected__2QNI0 {\n  background-color: #9362ff66;\n}\n\n.item-selected__2QNI0 img {\n  opacity: 1;\n}\n\n.item-disabled__vbJQc {\n  cursor: auto;\n  pointer-events: none;\n}\n\n.item-disabled__vbJQc img {\n  filter: grayscale(100%);\n  --webkit-filter: grayscale(100%);\n}\n","",{version:3,sources:["webpack://src/components/shelf/item/styles.module.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,mBAAmB;EACnB,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EAEE,2BAA2B;AAC7B;;AAEA;EACE,UAAU;AACZ;;AAEA;EAEE,YAAY;EACZ,oBAAoB;AACtB;;AAEA;EACE,uBAAuB;EACvB,gCAAgC;AAClC",sourcesContent:[":local(.item) {\n  align-items: center;\n  border-radius: 3rem;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-size: 1.8rem;\n  padding: 1.5rem 2.5rem;\n}\n\n:local(.item:hover) {\n  background-color: #9362ff44;\n}\n\n:local(.item label) {\n  margin-top: 1.5rem;\n}\n\n:local(.item img) {\n  opacity: 0.8;\n}\n\n:local(.item-selected) {\n  composes: item;\n  background-color: #9362ff66;\n}\n\n:local(.item-selected img) {\n  opacity: 1;\n}\n\n:local(.item-disabled) {\n  composes: item;\n  cursor: auto;\n  pointer-events: none;\n}\n\n:local(.item-disabled img) {\n  filter: grayscale(100%);\n  --webkit-filter: grayscale(100%);\n}\n"],sourceRoot:""}]),o.locals={item:"item__3BfZ5","item-selected":"item-selected__2QNI0 item__3BfZ5",itemSelected:"item-selected__2QNI0 item__3BfZ5","item-disabled":"item-disabled__vbJQc item__3BfZ5",itemDisabled:"item-disabled__vbJQc item__3BfZ5"},n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".shelf__3NqjE {\n  display: flex;\n  justify-content: center;\n  margin: 3rem;\n  width: 100%;\n}\n","",{version:3,sources:["webpack://src/components/shelf/styles.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,YAAY;EACZ,WAAW;AACb",sourcesContent:[":local(.shelf) {\n  display: flex;\n  justify-content: center;\n  margin: 3rem;\n  width: 100%;\n}\n"],sourceRoot:""}]),o.locals={shelf:"shelf__3NqjE"},n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".prompt__yb5Jn {\n  display: flex;\n  margin-top: 2rem;\n  position: relative;\n}\n\n.prompt__yb5Jn input {\n  border: 1px solid #ededed;\n  border-radius: 0.5rem;\n  font-family: inherit;\n  margin-right: 2rem;\n  padding: 0.5rem 1rem;\n  width: 30rem;\n}\n\n.prompt__yb5Jn label {\n  color: #45cbce;\n  font-weight: 500;\n  font-size: 1rem;\n  position: absolute;\n  top: 0.2rem;\n  left: 1.1rem;\n  text-transform: uppercase;\n}\n","",{version:3,sources:["webpack://src/components/prompt/styles.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,qBAAqB;EACrB,oBAAoB;EACpB,kBAAkB;EAClB,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,yBAAyB;AAC3B",sourcesContent:[":local(.prompt) {\n  display: flex;\n  margin-top: 2rem;\n  position: relative;\n}\n\n:local(.prompt input) {\n  border: 1px solid #ededed;\n  border-radius: 0.5rem;\n  font-family: inherit;\n  margin-right: 2rem;\n  padding: 0.5rem 1rem;\n  width: 30rem;\n}\n\n:local(.prompt label) {\n  color: #45cbce;\n  font-weight: 500;\n  font-size: 1rem;\n  position: absolute;\n  top: 0.2rem;\n  left: 1.1rem;\n  text-transform: uppercase;\n}\n"],sourceRoot:""}]),o.locals={prompt:"prompt__yb5Jn"},n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r),a=t(4),i=t.n(a),l=t(30),u=o()(!0),c=i()(l.a);u.push([e.i,".storyteller__1NK_k {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n\n.story-content__3Xvkk {\n  align-items: center;\n  border-image: url("+c+") 60 round;\n  border-style: solid;\n  border-width: 5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 3rem;\n  max-width: 70rem;\n  padding: 5rem 0;\n  position: relative;\n}\n\n.story-content__3Xvkk::before {\n  background-color: white;\n  content: '';\n  height: 100%;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.story-content__3Xvkk > * {\n  position: relative;\n  z-index: 1;\n}\n\n.story-content__3Xvkk > button {\n  margin-top: 2rem;\n}\n","",{version:3,sources:["webpack://src/components/storyteller/styles.module.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,8DAAgE;EAChE,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:[":local(.storyteller) {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n\n:local(.story-content) {\n  align-items: center;\n  border-image: url('/src/assets/backgrounds/scroll.png') 60 round;\n  border-style: solid;\n  border-width: 5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 3rem;\n  max-width: 70rem;\n  padding: 5rem 0;\n  position: relative;\n}\n\n:local(.story-content::before) {\n  background-color: white;\n  content: '';\n  height: 100%;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n:local(.story-content > *) {\n  position: relative;\n  z-index: 1;\n}\n\n:local(.story-content > button) {\n  margin-top: 2rem;\n}\n"],sourceRoot:""}]),u.locals={storyteller:"storyteller__1NK_k","story-content":"story-content__3Xvkk",storyContent:"story-content__3Xvkk"},n.default=u},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".main__uuIac {\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  height: 100vh;\n}\n","",{version:3,sources:["webpack://src/components/app/styles.module.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,iCAAiC;EACjC,aAAa;AACf",sourcesContent:[":local(.main) {\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  height: 100vh;\n}\n"],sourceRoot:""}]),o.locals={main:"main__uuIac"},n.default=o},function(e,n,t){var r=t(5),o=t(50);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(2),o=t.n(r)()(!0);o.push([e.i,".content-wrapper {\n  align-items: center;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  max-width: 90rem;\n  padding-top: 25rem;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\nbutton {\n  border: none;\n  border-radius: 6px;\n  background-color: #8553f4;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2.4rem;\n  font-weight: bold;\n  padding: 1rem 3rem;\n  text-transform: uppercase;\n}\n\nbutton:hover {\n  background-color: #9362ff;\n}\n\nh1 {\n  color: #8553f4;\n  font-size: 4.2rem;\n}\n\np {\n  font-size: 2.8rem;\n  margin: 0;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n","",{version:3,sources:["webpack://src/styles/global.module.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,yBAAyB;EACzB,cAAc;EACd,eAAe;EACf,iBAAiB;EACjB,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,SAAS;EACT,mBAAmB;EACnB,kBAAkB;AACpB",sourcesContent:[":global(.content-wrapper) {\n  align-items: center;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  max-width: 90rem;\n  padding-top: 25rem;\n}\n\n:global(a) {\n  color: inherit;\n  text-decoration: none;\n}\n\n:global(button) {\n  border: none;\n  border-radius: 6px;\n  background-color: #8553f4;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2.4rem;\n  font-weight: bold;\n  padding: 1rem 3rem;\n  text-transform: uppercase;\n}\n\n:global(button:hover) {\n  background-color: #9362ff;\n}\n\n:global(h1) {\n  color: #8553f4;\n  font-size: 4.2rem;\n}\n\n:global(p) {\n  font-size: 2.8rem;\n  margin: 0;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(0),o=t.n(r),a=t(15),i=t.n(a),l=t(3);t(6);function u(){return(u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e){return"/"===e.charAt(0)}function s(e,n){for(var t=n,r=t+1,o=e.length;r<o;t+=1,r+=1)e[t]=e[r];e.pop()}var f=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],o=n&&n.split("/")||[],a=e&&c(e),i=n&&c(n),l=a||i;if(e&&c(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];t="."===u||".."===u||""===u}else t=!1;for(var f=0,d=o.length;d>=0;d--){var p=o[d];"."===p?s(o,d):".."===p?(s(o,d),f++):f&&(s(o,d),f--)}if(!l)for(;f--;f)o.unshift("..");!l||""===o[0]||o[0]&&c(o[0])||o.unshift("");var m=o.join("/");return t&&"/"!==m.substr(-1)&&(m+="/"),m};var d="Invariant failed";var p=function(e,n){if(!e)throw new Error(d)};function m(e){return"/"===e.charAt(0)?e:"/"+e}function h(e){return"/"===e.charAt(0)?e.substr(1):e}function g(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function v(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function y(e){var n=e.pathname,t=e.search,r=e.hash,o=n||"/";return t&&"?"!==t&&(o+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function b(e,n,t,r){var o;"string"==typeof e?(o=function(e){var n=e||"/",t="",r="",o=n.indexOf("#");-1!==o&&(r=n.substr(o),n=n.substr(0,o));var a=n.indexOf("?");return-1!==a&&(t=n.substr(a),n=n.substr(0,a)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e)).state=n:(void 0===(o=u({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==n&&void 0===o.state&&(o.state=n));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(o.key=t),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=f(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function A(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,o){if(null!=e){var a="function"==typeof e?e(n,t):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var E=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,n){n(window.confirm(e))}var w="popstate",x="hashchange";function C(){try{return window.history.state||{}}catch(e){return{}}}function _(e){void 0===e&&(e={}),E||p(!1);var n,t=window.history,r=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,i=a.forceRefresh,l=void 0!==i&&i,c=a.getUserConfirmation,s=void 0===c?k:c,f=a.keyLength,d=void 0===f?6:f,h=e.basename?v(m(e.basename)):"";function _(e){var n=e||{},t=n.key,r=n.state,o=window.location,a=o.pathname+o.search+o.hash;return h&&(a=g(a,h)),b(a,r,t)}function T(){return Math.random().toString(36).substr(2,d)}var S=A();function B(e){u(U,e),U.length=t.length,S.notifyListeners(U.location,U.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(_(e.state))}function N(){R(_(C()))}var O=!1;function R(e){if(O)O=!1,B();else{S.confirmTransitionTo(e,"POP",s,(function(n){n?B({action:"POP",location:e}):function(e){var n=U.location,t=M.indexOf(n.key);-1===t&&(t=0);var r=M.indexOf(e.key);-1===r&&(r=0);var o=t-r;o&&(O=!0,I(o))}(e)}))}}var z=_(C()),M=[z.key];function D(e){return h+y(e)}function I(e){t.go(e)}var F=0;function j(e){1===(F+=e)&&1===e?(window.addEventListener(w,P),o&&window.addEventListener(x,N)):0===F&&(window.removeEventListener(w,P),o&&window.removeEventListener(x,N))}var L=!1;var U={length:t.length,action:"POP",location:z,createHref:D,push:function(e,n){var o="PUSH",a=b(e,n,T(),U.location);S.confirmTransitionTo(a,o,s,(function(e){if(e){var n=D(a),i=a.key,u=a.state;if(r)if(t.pushState({key:i,state:u},null,n),l)window.location.href=n;else{var c=M.indexOf(U.location.key),s=M.slice(0,c+1);s.push(a.key),M=s,B({action:o,location:a})}else window.location.href=n}}))},replace:function(e,n){var o="REPLACE",a=b(e,n,T(),U.location);S.confirmTransitionTo(a,o,s,(function(e){if(e){var n=D(a),i=a.key,u=a.state;if(r)if(t.replaceState({key:i,state:u},null,n),l)window.location.replace(n);else{var c=M.indexOf(U.location.key);-1!==c&&(M[c]=a.key),B({action:o,location:a})}else window.location.replace(n)}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var n=S.setPrompt(e);return L||(j(1),L=!0),function(){return L&&(L=!1,j(-1)),n()}},listen:function(e){var n=S.appendListener(e);return j(1),function(){j(-1),n()}}};return U}var T="hashchange",S={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+h(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:h,decodePath:m},slash:{encodePath:m,decodePath:m}};function B(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function P(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function N(e){window.location.replace(B(window.location.href)+"#"+e)}function O(e){void 0===e&&(e={}),E||p(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),r=t.getUserConfirmation,o=void 0===r?k:r,a=t.hashType,i=void 0===a?"slash":a,l=e.basename?v(m(e.basename)):"",c=S[i],s=c.encodePath,f=c.decodePath;function d(){var e=f(P());return l&&(e=g(e,l)),b(e)}var h=A();function w(e){u(L,e),L.length=n.length,h.notifyListeners(L.location,L.action)}var x=!1,C=null;function _(){var e,n,t=P(),r=s(t);if(t!==r)N(r);else{var a=d(),i=L.location;if(!x&&(n=a,(e=i).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if(C===y(a))return;C=null,function(e){if(x)x=!1,w();else{var n="POP";h.confirmTransitionTo(e,n,o,(function(t){t?w({action:n,location:e}):function(e){var n=L.location,t=M.lastIndexOf(y(n));-1===t&&(t=0);var r=M.lastIndexOf(y(e));-1===r&&(r=0);var o=t-r;o&&(x=!0,D(o))}(e)}))}}(a)}}var O=P(),R=s(O);O!==R&&N(R);var z=d(),M=[y(z)];function D(e){n.go(e)}var I=0;function F(e){1===(I+=e)&&1===e?window.addEventListener(T,_):0===I&&window.removeEventListener(T,_)}var j=!1;var L={length:n.length,action:"POP",location:z,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=B(window.location.href)),t+"#"+s(l+y(e))},push:function(e,n){var t="PUSH",r=b(e,void 0,void 0,L.location);h.confirmTransitionTo(r,t,o,(function(e){if(e){var n=y(r),o=s(l+n);if(P()!==o){C=n,function(e){window.location.hash=e}(o);var a=M.lastIndexOf(y(L.location)),i=M.slice(0,a+1);i.push(n),M=i,w({action:t,location:r})}else w()}}))},replace:function(e,n){var t="REPLACE",r=b(e,void 0,void 0,L.location);h.confirmTransitionTo(r,t,o,(function(e){if(e){var n=y(r),o=s(l+n);P()!==o&&(C=n,N(o));var a=M.indexOf(y(L.location));-1!==a&&(M[a]=n),w({action:t,location:r})}}))},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var n=h.setPrompt(e);return j||(F(1),j=!0),function(){return j&&(j=!1,F(-1)),n()}},listen:function(e){var n=h.appendListener(e);return F(1),function(){F(-1),n()}}};return L}function R(e,n,t){return Math.min(Math.max(e,n),t)}function z(e){void 0===e&&(e={});var n=e,t=n.getUserConfirmation,r=n.initialEntries,o=void 0===r?["/"]:r,a=n.initialIndex,i=void 0===a?0:a,l=n.keyLength,c=void 0===l?6:l,s=A();function f(e){u(v,e),v.length=v.entries.length,s.notifyListeners(v.location,v.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=R(i,0,o.length-1),m=o.map((function(e){return b(e,void 0,"string"==typeof e?d():e.key||d())})),h=y;function g(e){var n=R(v.index+e,0,v.entries.length-1),r=v.entries[n];s.confirmTransitionTo(r,"POP",t,(function(e){e?f({action:"POP",location:r,index:n}):f()}))}var v={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(e,n){var r="PUSH",o=b(e,n,d(),v.location);s.confirmTransitionTo(o,r,t,(function(e){if(e){var n=v.index+1,t=v.entries.slice(0);t.length>n?t.splice(n,t.length-n,o):t.push(o),f({action:r,location:o,index:n,entries:t})}}))},replace:function(e,n){var r="REPLACE",o=b(e,n,d(),v.location);s.confirmTransitionTo(o,r,t,(function(e){e&&(v.entries[v.index]=o,f({action:r,location:o}))}))},go:g,goBack:function(){g(-1)},goForward:function(){g(1)},canGo:function(e){var n=v.index+e;return n>=0&&n<v.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return v}var M=t(9),D=t(10),I=t.n(D);t(14);function F(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}t(26);var j=function(e){var n=Object(M.a)();return n.displayName=e,n}("Router-History"),L=function(e){var n=Object(M.a)();return n.displayName=e,n}("Router"),U=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={location:n.history.location},t._isMounted=!1,t._pendingLocation=null,n.staticContext||(t.unlisten=n.history.listen((function(e){t._isMounted?t.setState({location:e}):t._pendingLocation=e}))),t}Object(l.a)(n,e),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var t=n.prototype;return t.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&this.unlisten()},t.render=function(){return o.a.createElement(L.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.a.createElement(j.Provider,{children:this.props.children||null,value:this.props.history}))},n}(o.a.Component);o.a.Component;o.a.Component;var W={},$=0;function V(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,o=t.exact,a=void 0!==o&&o,i=t.strict,l=void 0!==i&&i,u=t.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=W[t]||(W[t]={});if(r[e])return r[e];var o=[],a={regexp:I()(e,o,n),keys:o};return $<1e4&&(r[e]=a,$++),a}(t,{end:a,strict:l,sensitive:c}),o=r.regexp,i=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return a&&!d?null:{path:t,url:"/"===t&&""===s?"/":s,isExact:d,params:i.reduce((function(e,n,t){return e[n.name]=f[t],e}),{})}}),null)}var Q=function(e){function n(){return e.apply(this,arguments)||this}return Object(l.a)(n,e),n.prototype.render=function(){var e=this;return o.a.createElement(L.Consumer,null,(function(n){n||p(!1);var t=e.props.location||n.location,r=u({},n,{location:t,match:e.props.computedMatch?e.props.computedMatch:e.props.path?V(t.pathname,e.props):n.match}),a=e.props,i=a.children,l=a.component,c=a.render;return Array.isArray(i)&&0===i.length&&(i=null),o.a.createElement(L.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?o.a.createElement(l,r):c?c(r):null:"function"==typeof i?i(r):null)}))},n}(o.a.Component);function H(e){return"/"===e.charAt(0)?e:"/"+e}function Y(e,n){if(!e)return n;var t=H(e);return 0!==n.pathname.indexOf(t)?n:u({},n,{pathname:n.pathname.substr(t.length)})}function q(e){return"string"==typeof e?e:y(e)}function K(e){return function(){p(!1)}}function X(){}o.a.Component;var Z=function(e){function n(){return e.apply(this,arguments)||this}return Object(l.a)(n,e),n.prototype.render=function(){var e=this;return o.a.createElement(L.Consumer,null,(function(n){n||p(!1);var t,r,a=e.props.location||n.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){t=e;var i=e.props.path||e.props.from;r=i?V(a.pathname,u({},e.props,{path:i})):n.match}})),r?o.a.cloneElement(t,{location:a,computedMatch:r}):null}))},n}(o.a.Component);var J=o.a.useContext;function G(e){var n=J(L).location,t=J(L).match;return e?V(n.pathname,e):t}var ee=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(n=e.call.apply(e,[this].concat(r))||this).history=_(n.props),n}return Object(l.a)(n,e),n.prototype.render=function(){return o.a.createElement(U,{history:this.history,children:this.props.children})},n}(o.a.Component);o.a.Component;var ne=function(e,n){return"function"==typeof e?e(n):e},te=function(e,n){return"string"==typeof e?b(e,null,null,n):e},re=function(e){return e},oe=o.a.forwardRef;void 0===oe&&(oe=re);var ae=oe((function(e,n){var t=e.innerRef,r=e.navigate,a=e.onClick,i=F(e,["innerRef","navigate","onClick"]),l=i.target,c=u({},i,{onClick:function(e){try{a&&a(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=re!==oe&&n||t,o.a.createElement("a",c)}));var ie=oe((function(e,n){var t=e.component,r=void 0===t?ae:t,a=e.replace,i=e.to,l=e.innerRef,c=F(e,["component","replace","to","innerRef"]);return o.a.createElement(L.Consumer,null,(function(e){e||p(!1);var t=e.history,s=te(ne(i,e.location),e.location),f=s?t.createHref(s):"",d=u({},c,{href:f,navigate:function(){var n=ne(i,e.location);(a?t.replace:t.push)(n)}});return re!==oe?d.ref=n||l:d.innerRef=l,o.a.createElement(r,d)}))})),le=function(e){return e},ue=o.a.forwardRef;void 0===ue&&(ue=le);ue((function(e,n){var t=e["aria-current"],r=void 0===t?"page":t,a=e.activeClassName,i=void 0===a?"active":a,l=e.activeStyle,c=e.className,s=e.exact,f=e.isActive,d=e.location,m=e.sensitive,h=e.strict,g=e.style,v=e.to,y=e.innerRef,b=F(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.a.createElement(L.Consumer,null,(function(e){e||p(!1);var t=d||e.location,a=te(ne(v,t),t),A=a.pathname,E=A&&A.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=E?V(t.pathname,{path:E,exact:s,sensitive:m,strict:h}):null,w=!!(f?f(k,t):k),x=w?function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(c,i):c,C=w?u({},g,{},l):g,_=u({"aria-current":w&&r||null,className:x,style:C,to:a},b);return le!==ue?_.ref=n||y:_.innerRef=y,o.a.createElement(ie,_)}))}));var ce=t(16),se=t.n(ce),fe=function(e){var n=e.user,t=n.first,r=n.last;return o.a.createElement("div",{className:se.a.header},o.a.createElement("div",null,"Árvore"),o.a.createElement("div",null,o.a.createElement("span",null,t," ",r)))},de=function(e){return o.a.createElement("div",{className:"content-wrapper"},e.children)},pe=t(1),me=t.n(pe),he=function(){return o.a.createElement("div",{className:me.a.grass},o.a.createElement(de,null,o.a.createElement("h1",null,"Colha uma História"),o.a.createElement("p",null,"Clarice, seja a autora do seu próprio conto e compartilhe com todos suas aventuras!"),o.a.createElement("button",null,o.a.createElement(ie,{to:"/biblioteca"},"Vamos lá"))))},ge=t(11),ve=t.n(ge),ye=function(){return o.a.createElement("div",{className:ve.a.wrapper},o.a.createElement("div",{className:ve.a.loadingSpinner},o.a.createElement("div",null),o.a.createElement("div",null),o.a.createElement("div",null),o.a.createElement("div",null)))},be=t(7),Ae=t.n(be),Ee=function(e){var n=e.item,t=e.isSelected,r=e.onSelect,a=n.disabled,i=n.icon,l=n.label,u=t&&Ae.a.itemSelected||a&&Ae.a.itemDisabled||Ae.a.item;return o.a.createElement("div",{className:u,onClick:function(){return r(n)}},o.a.createElement("img",{id:"user-choice-"+l,src:"src/assets/icons/"+i}),o.a.createElement("label",{htmlFor:"user-choice-"+l},l))},ke=t(27),we=t.n(ke),xe=function(e){var n=e.items,t=e.label,a=void 0===t?"Avançar":t,i=e.onConfirm;if(n.length<=1)return o.a.createElement("button",{onClick:function(){return i(n[0])}},a);var l=Object(r.useState)(null),u=l[0],c=l[1];return o.a.createElement(r.Fragment,null,o.a.createElement("div",{className:we.a.shelf},n.map((function(e){return o.a.createElement(Ee,{key:e.label,item:e,isSelected:e===u,onSelect:c})}))),u&&o.a.createElement("button",{onClick:function(){return i(u)}},a))},Ce=function(){var e=J(j),n=G().path,t=Object(r.useState)(null),a=t[0],i=t[1];if(!a)return setTimeout((function(){i([{icon:"princess.png",label:"Princesa",url:"princesa"},{disabled:!0,icon:"wizard.png",label:"Mago",url:"mago"},{disabled:!0,icon:"unicorn.png",label:"Unicórnio",url:"unicornio"}])}),2e3),o.a.createElement("div",{className:me.a.grass},o.a.createElement(ye,null));return o.a.createElement("div",{className:me.a.grass},o.a.createElement(de,null,o.a.createElement("h1",null,"Colha uma História"),o.a.createElement("p",null,"Muito bem, Clarice: Você está a um passo de ser uma grande autora!"),o.a.createElement("p",null,"Agora, vamos escolher o personagem para a sua história?"),o.a.createElement(xe,{items:a,onConfirm:function(t){e.push(n+"/"+t.url)}})))},_e=t(28),Te=t.n(_e),Se=t(29),Be=t.n(Se),Pe=function(e){var n=Object(r.useState)(""),t=n[0],a=n[1],i=e.onPromptUpdate,l=e.prompt;return l?o.a.createElement("div",{className:Be.a.prompt},o.a.createElement("label",{htmlFor:"promptInput"},l.placeholder),o.a.createElement("input",{id:"promptInput",onChange:function(e){return a(e.target.value)},type:l.type}),o.a.createElement("button",{onClick:function(){return i(l.key,t)}},"OK")):null},Ne={background:me.a.throneRoom,choice:{icon:"potion_purple.png",label:"Saúde para todos"},content:["A fada então soprou glitter por toda princesa e bradou:","- Querida {characterName}, seu reino foi abençoado conforme sua vontade e você será uma bondosa rainha um dia!","Ela então, acordou e estava em seu castelo. Todos viveram felizes para sempre."],foreground:me.a.princess},Oe={background:me.a.throneRoom,choice:{icon:"potion_pink.png",label:"Felicidade para todos"},content:["A fada então soprou glitter por toda princesa e bradou:","- Querida {characterName}, seu reino foi abençoado conforme sua vontade e você será uma bondosa rainha um dia!","Ela então, acordou e estava em seu castelo. Todos viveram felizes para sempre."],foreground:me.a.princess},Re={background:me.a.mountain,content:["Logo que a fada a viu ela disse:","- Nobre {characterName}, eu aguardava ansiosamente sua chegada! Vou ensinar uma poção mágica para você usar para o bem de seu reino:"],foreground:me.a.princessWithFairy,next:[Oe,Ne]},ze={background:me.a.mountain,choice:{icon:"mountain.png",label:"Montanha"},content:["Ahhh, a escolha das alturas!","Agora você deverá ir a montanha em forma de troll. Escale até a ponta do nariz dele. Entre na narina esquerda e suba até o olho.","Lá haverá uma lente de aumento que te mostrará onde a pequena fada brilhante estará. E assim ela o fez!"],foreground:me.a.princess,next:[Re]},Me={background:me.a.library,content:["Ele também pediu que {characterName} escolhesse com o coração.","Escolha o destino de {characterName}:"],foreground:me.a.princessWithBook,next:[ze,{content:[],choice:{disabled:!0,icon:"forest.png",label:"Floresta"}}]},De={background:me.a.library,content:["Ela pegou a escada, subiu até o último degrau, se esticou toda e conseguiu alcançá-lo.","- Ufa, finalmente – disse ela.","O livro repentinamente começou a falar e explicou que, após aberto, ela teria que completar uma tarefa."],foreground:me.a.princessWithBook,next:[Me]},Ie={background:me.a.library,content:["A biblioteca do palácio era tão grande que, para percorrê-la por inteiro, levava-se três dias.",'Um belo dia ela resolveu ir até o final, caminhou os três dias e foi até a última estante. Ao olhar para cima, viu um livro que brilhava e pensou "Será que é mágico?"'],foreground:me.a.princess,next:[De]},Fe={background:me.a.library,choice:{icon:"book.png",label:"Estudiosa"},content:["Princesa {characterName} amava estudar. Todos do povoado sempre sabiam onde encontrá-la. Quando alguém perguntava:","- Onde está {characterName}? Ela precisa almoçar!","O povoado inteiro respondia em peso:","- Princesa {characterName} está no lugar onde mora sua alegria, a biblioteca do palácio!"],foreground:me.a.princess,next:[Ie]},je={background:me.a.castle,content:["Princesa {characterName} era uma grande..."],foreground:me.a.princessWithBird,next:[{content:[],choice:{disabled:!0,icon:"sword.png",label:"Guerreira"}},Fe]},Le={background:me.a.castle,content:["O nome da princesa era...","Hmm... como era o nome dela mesmo?","{username}, escolha um nome para a princesa!"],foreground:me.a.princessWithBird,next:[je],prompt:{key:"characterName",type:"text",placeholder:"Nome da princesa"}},Ue={background:me.a.castle,content:["Era uma vez um reino misterioso e sagrado onde habitavam seres mágicos, um povoado e sua princesa.","Como ela era amada pelo seu povo!","Sua inteligência, coragem e lealdade para com seu povo era admirável."],next:[Le]},We=t(12),$e=t.n(We),Ve=function(){return(Ve=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e}).apply(this,arguments)},Qe=function(e){var n,t=e.username,a=Object(r.useState)(Ue),i=a[0],l=a[1],u=Object(r.useState)({username:t}),c=u[0],s=u[1],f=i.background,d=i.content,p=i.foreground,m=i.prompt,h=i.next;if(m)n=o.a.createElement(Pe,{onPromptUpdate:function(e,n){var t;s(Ve(Ve({},c),((t={})[e]=n,t)));var r=h[0];l(r)},prompt:m});else if(h){var g=h.map((function(e){return e.choice})).filter((function(e){return!!e}));n=o.a.createElement(xe,{items:g,onConfirm:function(e){var n=h.find((function(n){return n.choice===e}))||h[0];l(n)}})}return o.a.createElement(r.Fragment,null,o.a.createElement("div",{className:Te()($e.a.storyteller,f)},o.a.createElement(de,null,o.a.createElement("div",{className:$e.a.storyContent},d.map((function(e,n){return o.a.createElement("p",{key:n},(t=e,Object.keys(c).forEach((function(e){var n=new RegExp("{"+e+"}","g");t=t.replace(n,c[e])})),t));var t})),n))),o.a.createElement("div",{className:p}))},He=t(31),Ye=t.n(He),qe=function(){var e={first:"Clarice",last:"Lispector"};return o.a.createElement(ee,null,o.a.createElement("div",{className:Ye.a.main},o.a.createElement(fe,{user:e}),o.a.createElement(Z,null,o.a.createElement(Q,{path:"/biblioteca/:story"},o.a.createElement(Qe,{username:e.first})),o.a.createElement(Q,{path:"/biblioteca"},o.a.createElement(Ce,null)),o.a.createElement(Q,{path:"/"},o.a.createElement(he,null)))))};t(49);i.a.render(o.a.createElement(qe,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,